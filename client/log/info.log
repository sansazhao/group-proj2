2018-07-04 10:13:37 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 10:13:38 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:13:39 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@184cf7cf: startup date [Wed Jul 04 10:13:39 CST 2018]; root of context hierarchy
2018-07-04 10:13:39 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 10:13:39 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$14023725] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 10:13:41 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:13:41 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 10:13:41 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e17553a: startup date [Wed Jul 04 10:13:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@184cf7cf
2018-07-04 10:13:43 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=3fdb7af9-e3a7-3603-ad26-6593a2959468
2018-07-04 10:13:43 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 10:13:43 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$14023725] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 10:13:44 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 10:13:45 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3897 ms
2018-07-04 10:13:45 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 10:13:45 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 10:13:45 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@12db5fcd
2018-07-04 10:13:48 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:13:49 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:13:50 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:13:50 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:13:50 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:13:50 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:13:50 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 10:13:50 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 10:13:50 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 10:13:50 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 10:13:50 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 10:13:50 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 10:13:50 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:13:51 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e17553a: startup date [Wed Jul 04 10:13:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@184cf7cf
2018-07-04 10:13:51 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 10:13:51 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/producerHello]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello(java.lang.String)
2018-07-04 10:13:51 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 10:13:51 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:13:51 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:13:51 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:13:51 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:13:52 [main] [INFO] [org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration] - 

Using generated security password: 17682574-6868-4243-a1ea-66f22cf10187

2018-07-04 10:13:52 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a098d76, org.springframework.security.web.context.SecurityContextPersistenceFilter@561b61ed, org.springframework.security.web.header.HeaderWriterFilter@6dfa915a, org.springframework.security.web.csrf.CsrfFilter@71a06021, org.springframework.security.web.authentication.logout.LogoutFilter@3ed7821, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@726aa968, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1a2bcd56, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1cd3b138, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@26cb5207, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a9f023e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@40e37b06, org.springframework.security.web.session.SessionManagementFilter@cb7fa71, org.springframework.security.web.access.ExceptionTranslationFilter@22a6e998, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2e66bc32]
2018-07-04 10:13:53 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 2 endpoint(s) beneath base path '/actuator'
2018-07-04 10:13:53 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 10:13:53 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 10:13:53 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:13:53 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 10:13:53 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 10:13:53 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 10:13:53 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 10:13:53 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 10:13:53 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 10:13:53 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5e17553a,type=ConfigurationPropertiesRebinder]
2018-07-04 10:13:53 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 10:13:53 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 10:13:53 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 10:13:54 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 10:13:54 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 10:13:54 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 10:13:54 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 10:13:55 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 10:13:55 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:13:55 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:13:55 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:13:55 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:13:55 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:13:55 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:13:55 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:13:55 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 10:13:55 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 10:13:55 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 10:13:55 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530670435668 with initial instances count: 0
2018-07-04 10:13:55 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 10:13:55 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530670435679, current=UP, previous=STARTING]
2018-07-04 10:13:55 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:13:55 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 10:13:55 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 10:13:55 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 18.831 seconds (JVM running for 23.915)
2018-07-04 10:13:55 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 10:13:56 [RMI TCP Connection(6)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:13:56 [RMI TCP Connection(6)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-07-04 10:14:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:14:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:14:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:14:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:14:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:14:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: false
2018-07-04 10:14:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:14:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 10:15:56 [http-nio-9001-exec-7] [INFO] [java.lang.Class] - This is info message.
2018-07-04 10:15:56 [http-nio-9001-exec-7] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 10:15:58 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 more
2018-07-04 10:15:58 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:15:58 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more
2018-07-04 10:15:58 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:16:00 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
2018-07-04 10:16:00 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:16:00 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:16:00 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
2018-07-04 10:16:01 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:16:01 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:16:32 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
2018-07-04 10:16:32 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:16:32 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:16:33 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
2018-07-04 10:16:33 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:16:33 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:17:06 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:17:06 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:17:06 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:17:06 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:17:36 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:17:36 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:17:36 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:17:36 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:17:53 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 10:17:57 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:17:58 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@48fa0f47: startup date [Wed Jul 04 10:17:58 CST 2018]; root of context hierarchy
2018-07-04 10:17:58 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 10:17:58 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fbd8e897] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 10:18:00 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:18:01 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 10:18:01 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42b3b079: startup date [Wed Jul 04 10:18:01 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@48fa0f47
2018-07-04 10:18:04 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=3fdb7af9-e3a7-3603-ad26-6593a2959468
2018-07-04 10:18:04 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 10:18:04 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fbd8e897] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 10:18:07 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 10:18:08 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 7518 ms
2018-07-04 10:18:09 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 10:18:09 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 10:18:09 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@63c37b23
2018-07-04 10:18:11 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:18:13 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:18:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:18:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:18:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:18:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:18:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 10:18:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 10:18:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 10:18:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 10:18:14 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 10:18:14 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 10:18:14 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:18:15 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42b3b079: startup date [Wed Jul 04 10:18:01 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@48fa0f47
2018-07-04 10:18:15 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 10:18:15 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/producerHello]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello(java.lang.String)
2018-07-04 10:18:15 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 10:18:15 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:18:15 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:18:15 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:18:15 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:18:17 [main] [INFO] [org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration] - 

Using generated security password: 37331f31-e5a7-4714-bbbd-024b08771f5d

2018-07-04 10:18:18 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4052c8c2, org.springframework.security.web.context.SecurityContextPersistenceFilter@7100dea, org.springframework.security.web.header.HeaderWriterFilter@77b919a3, org.springframework.security.web.csrf.CsrfFilter@6cc86152, org.springframework.security.web.authentication.logout.LogoutFilter@2f2bff16, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4e1a46fb, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@56da7487, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7d44a19, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@32e54a9d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6dcc40f5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@181b8c4b, org.springframework.security.web.session.SessionManagementFilter@36681447, org.springframework.security.web.access.ExceptionTranslationFilter@5fcfde70, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@762637be]
2018-07-04 10:18:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 2 endpoint(s) beneath base path '/actuator'
2018-07-04 10:18:19 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 10:18:19 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 10:18:19 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:18:19 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 10:18:19 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 10:18:19 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 10:18:19 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 10:18:19 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 10:18:19 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 10:18:19 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=42b3b079,type=ConfigurationPropertiesRebinder]
2018-07-04 10:18:19 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 10:18:19 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 10:18:19 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 10:18:20 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 10:18:20 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 10:18:21 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 10:18:21 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 10:18:21 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 10:18:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:18:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:18:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:18:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:18:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:18:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:18:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:18:22 [main] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:18:22 [main] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$341e1b6.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$341e1b6$$FastClassBySpringCGLIB$$3c8850ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$341e1b6.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:52)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:157)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:121)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:885)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.eureka.client.ClientApplication.main(ClientApplication.java:12)
2018-07-04 10:18:22 [main] [WARN] [com.netflix.discovery.DiscoveryClient] - Using default backup registry implementation which does not do anything.
2018-07-04 10:18:22 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 10:18:22 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 10:18:22 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530670702117 with initial instances count: 0
2018-07-04 10:18:22 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 10:18:22 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530670702133, current=UP, previous=STARTING]
2018-07-04 10:18:22 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:18:22 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 10:18:22 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 10:18:22 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 29.551 seconds (JVM running for 34.8)
2018-07-04 10:18:22 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:18:22 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:18:22 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:18:24 [RMI TCP Connection(2)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:18:24 [RMI TCP Connection(2)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2018-07-04 10:18:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:18:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:18:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:18:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:18:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:18:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:18:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:18:52 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:18:52 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:18:52 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:18:52 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:18:52 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:18:52 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:18:52 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:18:52 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:19:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:19:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:19:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:19:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:19:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:19:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:19:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:19:22 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:19:22 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:19:22 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:19:22 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:19:22 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:19:22 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:19:22 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:19:22 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:19:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:19:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:19:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:19:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:19:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:19:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:19:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:19:52 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:19:52 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:19:52 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:19:52 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:19:52 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:19:52 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:19:52 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:19:52 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:20:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:20:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:20:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:20:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:20:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:20:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:20:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:20:22 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:20:22 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:20:22 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:20:22 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:20:22 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:20:22 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:20:22 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:20:22 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:20:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:20:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:20:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:20:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:20:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:20:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:20:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:20:52 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:20:52 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:20:52 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:20:52 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:20:52 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:20:52 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:20:52 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:20:52 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:21:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:21:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:21:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:21:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:21:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:21:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:21:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:21:22 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:21:22 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:21:22 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:21:22 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:21:22 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:21:22 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:21:22 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:21:22 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:21:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:21:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:21:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:21:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:21:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:21:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:21:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:21:52 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:21:52 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:21:52 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:21:52 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:21:52 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:21:52 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:21:52 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:21:52 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:22:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:22:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:22:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:22:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:22:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:22:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:22:22 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:22:22 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:22:22 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:22:22 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:22:22 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:22:22 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:22:22 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:22:22 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:22:22 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:22:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:22:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:22:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:22:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:22:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:22:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:22:52 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:22:52 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:22:52 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:22:52 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:26:29 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 10:26:33 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:26:33 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b07a0d6: startup date [Wed Jul 04 10:26:33 CST 2018]; root of context hierarchy
2018-07-04 10:26:34 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 10:26:34 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8a18e3b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 10:26:36 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:26:36 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 10:26:36 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@cd1e646: startup date [Wed Jul 04 10:26:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b07a0d6
2018-07-04 10:26:38 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=1cf9e0ba-4907-37e6-8fcc-c2d0412e83ab
2018-07-04 10:26:38 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 10:26:38 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8a18e3b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 10:26:39 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 10:26:40 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 4339 ms
2018-07-04 10:26:41 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 10:26:41 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 10:26:41 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7b9f300f
2018-07-04 10:26:43 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:26:45 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:26:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:26:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:26:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:26:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:26:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 10:26:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 10:26:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 10:26:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 10:26:46 [main] [INFO] [org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration] - 

Using generated security password: 5e782493-79f7-413f-9bdf-8d4d8eb814f5

2018-07-04 10:26:46 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@23382f76, org.springframework.security.web.context.SecurityContextPersistenceFilter@41f4fe5, org.springframework.security.web.header.HeaderWriterFilter@732c9b5c, org.springframework.security.web.authentication.logout.LogoutFilter@221dad51, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@96a75da, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@514cd540, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@440eaa07, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c551ad4, org.springframework.security.web.session.SessionManagementFilter@4bbb49b0, org.springframework.security.web.access.ExceptionTranslationFilter@3ae0b770, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@327ed9f5]
2018-07-04 10:26:47 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 10:26:47 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 10:26:47 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:26:47 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@cd1e646: startup date [Wed Jul 04 10:26:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b07a0d6
2018-07-04 10:26:47 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 10:26:47 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/producerHello]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello(java.lang.String)
2018-07-04 10:26:47 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 10:26:47 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:26:47 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:26:47 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:26:47 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:26:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 2 endpoint(s) beneath base path '/actuator'
2018-07-04 10:26:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 10:26:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 10:26:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:26:49 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 10:26:49 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 10:26:49 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 10:26:49 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 10:26:49 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 10:26:49 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 10:26:49 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=cd1e646,type=ConfigurationPropertiesRebinder]
2018-07-04 10:26:49 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 10:26:49 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 10:26:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 10:26:50 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 10:26:50 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 10:26:50 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 10:26:50 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 10:26:50 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 10:26:51 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:26:51 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:26:51 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:26:51 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:26:51 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:26:51 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:26:51 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:26:51 [main] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:26:51 [main] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$9181dcd2.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$9181dcd2$$FastClassBySpringCGLIB$$2e4286e0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$9181dcd2.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:52)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:157)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:121)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:885)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.eureka.client.ClientApplication.main(ClientApplication.java:12)
2018-07-04 10:26:51 [main] [WARN] [com.netflix.discovery.DiscoveryClient] - Using default backup registry implementation which does not do anything.
2018-07-04 10:26:51 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 10:26:51 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 10:26:51 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530671211628 with initial instances count: 0
2018-07-04 10:26:51 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 10:26:51 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530671211651, current=UP, previous=STARTING]
2018-07-04 10:26:51 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:26:51 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 10:26:51 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 10:26:51 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 22.753 seconds (JVM running for 25.555)
2018-07-04 10:26:51 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:26:51 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:26:51 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:26:54 [RMI TCP Connection(2)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:26:54 [RMI TCP Connection(2)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-07-04 10:27:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:27:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:27:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:27:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:27:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:27:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:27:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:27:21 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:27:21 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:27:21 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:27:21 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:27:21 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:27:21 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:27:21 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:27:21 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:27:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:27:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:27:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:27:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:27:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:27:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:27:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:27:51 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:27:51 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:27:51 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:27:51 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:27:51 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:27:51 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:27:51 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:27:51 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:28:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:28:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:28:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:28:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:28:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:28:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:28:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:28:21 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:28:21 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:28:21 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:28:21 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:28:21 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:28:21 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:28:21 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:28:21 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:28:51 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:28:51 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:28:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:28:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:28:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:28:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:28:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:28:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:28:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:28:51 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:28:51 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:28:51 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:28:51 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:28:51 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:28:51 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:29:21 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:29:21 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:29:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:29:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:29:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:29:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:29:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:29:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:29:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:29:21 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:29:21 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:29:21 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:29:21 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:29:21 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:29:21 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:29:51 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:29:51 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:29:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:29:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:29:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:29:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:29:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:29:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:29:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:29:51 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:29:51 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:29:51 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:29:51 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:29:51 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:29:51 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:30:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:30:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:30:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:30:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:30:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:30:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:30:21 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:30:21 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:30:21 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:30:21 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:30:21 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:30:21 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:30:21 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:30:21 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:30:21 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:37:46 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 10:37:48 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:37:51 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6ce139a4: startup date [Wed Jul 04 10:37:51 CST 2018]; root of context hierarchy
2018-07-04 10:37:51 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 10:37:51 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$94cef5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 10:37:53 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:37:53 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 10:37:53 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6aa8e115: startup date [Wed Jul 04 10:37:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6ce139a4
2018-07-04 10:37:55 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=1cf9e0ba-4907-37e6-8fcc-c2d0412e83ab
2018-07-04 10:37:55 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 10:37:55 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$94cef5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 10:37:55 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 10:37:57 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3687 ms
2018-07-04 10:37:57 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 10:37:57 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 10:37:57 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@40ffd533
2018-07-04 10:37:59 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:38:01 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:38:01 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:38:01 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:38:01 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:38:01 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:38:01 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 10:38:01 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 10:38:01 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 10:38:01 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 10:38:02 [main] [INFO] [org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration] - 

Using generated security password: d6749373-2580-4caf-bcb1-37d4b7d114cb

2018-07-04 10:38:02 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7ed9499e, org.springframework.security.web.context.SecurityContextPersistenceFilter@6b0615ae, org.springframework.security.web.header.HeaderWriterFilter@3ec2ecea, org.springframework.security.web.authentication.logout.LogoutFilter@4da9f723, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1f44ddab, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@221dad51, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64693226, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@28e19366, org.springframework.security.web.session.SessionManagementFilter@7afbf561, org.springframework.security.web.access.ExceptionTranslationFilter@eb507b9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@554cd74a]
2018-07-04 10:38:02 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 10:38:02 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 10:38:03 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:38:03 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6aa8e115: startup date [Wed Jul 04 10:37:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6ce139a4
2018-07-04 10:38:03 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 10:38:03 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/producerHello]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello(java.lang.String)
2018-07-04 10:38:03 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 10:38:03 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:38:03 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:38:03 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:38:03 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:38:04 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 2 endpoint(s) beneath base path '/actuator'
2018-07-04 10:38:04 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 10:38:04 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 10:38:04 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:38:04 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 10:38:04 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 10:38:04 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 10:38:04 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 10:38:04 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 10:38:04 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 10:38:04 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6aa8e115,type=ConfigurationPropertiesRebinder]
2018-07-04 10:38:04 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 10:38:04 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 10:38:04 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 10:38:05 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 10:38:05 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 10:38:05 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 10:38:05 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 10:38:06 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 10:38:06 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:38:06 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:38:06 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:38:06 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:38:06 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:38:06 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:38:06 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:38:07 [main] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:38:07 [main] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$10b5e87b.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$10b5e87b$$FastClassBySpringCGLIB$$2369a72.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$10b5e87b.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:52)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:157)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:121)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:885)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.eureka.client.ClientApplication.main(ClientApplication.java:12)
2018-07-04 10:38:07 [main] [WARN] [com.netflix.discovery.DiscoveryClient] - Using default backup registry implementation which does not do anything.
2018-07-04 10:38:07 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 10:38:07 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 10:38:07 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530671887095 with initial instances count: 0
2018-07-04 10:38:07 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 10:38:07 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530671887106, current=UP, previous=STARTING]
2018-07-04 10:38:07 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:38:07 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 10:38:07 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 10:38:07 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 21.225 seconds (JVM running for 23.72)
2018-07-04 10:38:07 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:38:07 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:38:07 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:38:08 [RMI TCP Connection(9)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:38:08 [RMI TCP Connection(9)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2018-07-04 10:38:37 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:38:37 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:38:37 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:38:37 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:38:37 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:38:37 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:38:37 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:38:37 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:38:37 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:38:37 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
javax.ws.rs.WebApplicationException
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:105)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:38:37 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: null
2018-07-04 10:38:37 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:38:37 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:38:37 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:38:37 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:38:37 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:39:07 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:39:07 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:39:07 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:39:07 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:39:07 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:39:07 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:39:07 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:39:07 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:39:07 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:39:07 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:39:08 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:39:08 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:39:08 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:39:08 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
javax.ws.rs.WebApplicationException
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:105)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:39:08 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: null
2018-07-04 10:39:08 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:39:37 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:39:37 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:39:37 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:39:37 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:39:37 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:39:37 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:39:37 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:39:38 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:39:39 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
2018-07-04 10:39:39 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:39:39 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:39:41 [DiscoveryClient-InstanceInfoReplicator-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more
2018-07-04 10:39:41 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
2018-07-04 10:39:41 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:39:41 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:39:41 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:39:41 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:39:41 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:40:09 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:40:09 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:40:09 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:40:09 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:40:09 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:40:09 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:40:09 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:40:11 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:40:11 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
2018-07-04 10:40:11 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:40:11 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:40:13 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
2018-07-04 10:40:13 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:40:13 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:40:13 [DiscoveryClient-InstanceInfoReplicator-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more
2018-07-04 10:40:13 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:40:13 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:40:13 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:40:41 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:40:41 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:40:41 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:40:41 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:40:41 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:40:41 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:40:41 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:40:42 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 10:40:43 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:40:43 [DiscoveryClient-HeartbeatExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - Re-registering apps/SJTU_SE
2018-07-04 10:40:43 [DiscoveryClient-HeartbeatExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:40:43 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 10:40:43 [DiscoveryClient-HeartbeatExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 10:41:28 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 10:41:31 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:41:31 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@222114ba: startup date [Wed Jul 04 10:41:31 CST 2018]; root of context hierarchy
2018-07-04 10:41:32 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 10:41:32 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f5e046ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 10:41:34 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:41:34 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 10:41:34 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13bc8645: startup date [Wed Jul 04 10:41:34 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@222114ba
2018-07-04 10:41:36 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=1cf9e0ba-4907-37e6-8fcc-c2d0412e83ab
2018-07-04 10:41:36 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 10:41:37 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f5e046ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 10:41:37 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 10:41:38 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 4444 ms
2018-07-04 10:41:39 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 10:41:39 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 10:41:39 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@55d8a1e0
2018-07-04 10:41:41 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:41:42 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:41:43 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:41:43 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:41:43 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:41:43 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:41:43 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 10:41:43 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 10:41:43 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 10:41:43 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 10:41:44 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@11d4dbd6, org.springframework.security.web.context.SecurityContextPersistenceFilter@713064e8, org.springframework.security.web.header.HeaderWriterFilter@58ec7116, org.springframework.security.web.authentication.logout.LogoutFilter@f096f37, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1bf39d06, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@10bd9df0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6f4ade6e, org.springframework.security.web.session.SessionManagementFilter@7cb8437d, org.springframework.security.web.access.ExceptionTranslationFilter@27ace0b1]
2018-07-04 10:41:44 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 10:41:44 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 10:41:44 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:41:45 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13bc8645: startup date [Wed Jul 04 10:41:34 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@222114ba
2018-07-04 10:41:45 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 10:41:45 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/producerHello]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello(java.lang.String)
2018-07-04 10:41:45 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 10:41:45 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:41:45 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:41:45 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:41:45 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:41:46 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 2 endpoint(s) beneath base path '/actuator'
2018-07-04 10:41:46 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 10:41:46 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 10:41:46 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:41:46 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 10:41:46 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 10:41:46 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 10:41:46 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 10:41:46 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 10:41:46 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 10:41:46 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=13bc8645,type=ConfigurationPropertiesRebinder]
2018-07-04 10:41:46 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 10:41:46 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 10:41:46 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 10:41:48 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 10:41:48 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 10:41:48 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 10:41:48 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 10:41:49 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 10:41:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:41:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:41:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:41:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:41:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:41:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:41:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:41:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 10:41:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 10:41:49 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 10:41:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530672109817 with initial instances count: 1
2018-07-04 10:41:49 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 10:41:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530672109831, current=UP, previous=STARTING]
2018-07-04 10:41:49 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:41:49 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 10:41:49 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 10:41:49 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 10:41:49 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 22.439 seconds (JVM running for 27.994)
2018-07-04 10:41:51 [RMI TCP Connection(2)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:41:51 [RMI TCP Connection(2)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2018-07-04 10:43:53 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 more
2018-07-04 10:43:53 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more
2018-07-04 10:43:53 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:43:53 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:43:55 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
2018-07-04 10:43:55 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:43:55 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:43:55 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
2018-07-04 10:43:55 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:43:55 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:44:27 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
2018-07-04 10:44:27 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
2018-07-04 10:44:27 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:44:27 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:44:27 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:44:27 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:45:01 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 10:45:04 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:45:04 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@15b204a1: startup date [Wed Jul 04 10:45:04 CST 2018]; root of context hierarchy
2018-07-04 10:45:05 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 10:45:05 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9ea6898] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 10:45:08 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:45:08 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 10:45:08 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2205a05d: startup date [Wed Jul 04 10:45:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@15b204a1
2018-07-04 10:45:10 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=1cf9e0ba-4907-37e6-8fcc-c2d0412e83ab
2018-07-04 10:45:10 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 10:45:10 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9ea6898] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 10:45:11 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 10:45:12 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3989 ms
2018-07-04 10:45:13 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 10:45:13 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 10:45:13 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7d8bfe91
2018-07-04 10:45:15 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:45:17 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:45:19 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:45:19 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:45:19 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:45:19 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:45:19 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 10:45:19 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 10:45:19 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 10:45:19 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 10:45:20 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@588307f7, org.springframework.security.web.context.SecurityContextPersistenceFilter@74db12c2, org.springframework.security.web.header.HeaderWriterFilter@3e84111a, org.springframework.security.web.csrf.CsrfFilter@112d1c8e, org.springframework.security.web.authentication.logout.LogoutFilter@42d73c61, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@148c7c4b, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@d48673, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@211febf3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ea899a9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@45e22def, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7df76d99, org.springframework.security.web.session.SessionManagementFilter@6fa69af7, org.springframework.security.web.access.ExceptionTranslationFilter@31edeac, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3fc05ea2]
2018-07-04 10:45:20 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 10:45:20 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 10:45:20 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:45:20 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2205a05d: startup date [Wed Jul 04 10:45:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@15b204a1
2018-07-04 10:45:20 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 10:45:20 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/producerHello]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello(java.lang.String)
2018-07-04 10:45:20 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 10:45:20 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:45:20 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:45:21 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:45:21 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:45:22 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 2 endpoint(s) beneath base path '/actuator'
2018-07-04 10:45:22 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 10:45:22 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 10:45:22 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:45:22 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 10:45:22 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 10:45:22 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 10:45:22 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 10:45:22 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 10:45:22 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 10:45:22 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2205a05d,type=ConfigurationPropertiesRebinder]
2018-07-04 10:45:22 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 10:45:22 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 10:45:22 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 10:45:23 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 10:45:23 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 10:45:24 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 10:45:24 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 10:45:24 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 10:45:24 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:45:24 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:45:24 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:45:24 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:45:24 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:45:24 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:45:24 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:45:25 [main] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:45:25 [main] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$115361b7.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$115361b7$$FastClassBySpringCGLIB$$ea212010.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$115361b7.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:52)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:157)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:121)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:885)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.eureka.client.ClientApplication.main(ClientApplication.java:12)
2018-07-04 10:45:25 [main] [WARN] [com.netflix.discovery.DiscoveryClient] - Using default backup registry implementation which does not do anything.
2018-07-04 10:45:25 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 10:45:25 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 10:45:25 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530672325766 with initial instances count: 0
2018-07-04 10:45:25 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 10:45:25 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530672325775, current=UP, previous=STARTING]
2018-07-04 10:45:25 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:45:25 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 10:45:25 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 10:45:25 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 25.831 seconds (JVM running for 29.121)
2018-07-04 10:45:25 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:45:25 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:45:25 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:45:27 [RMI TCP Connection(3)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:45:28 [RMI TCP Connection(3)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 1072 ms
2018-07-04 10:45:55 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:45:55 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:45:55 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:45:55 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:45:55 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:45:55 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:45:55 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:45:55 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:45:55 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:45:55 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:45:55 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:45:55 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:45:55 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:45:55 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:45:55 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:46:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:46:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:46:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:46:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:46:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:46:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:46:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:46:25 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:46:27 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
2018-07-04 10:46:27 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:46:27 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:46:27 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
2018-07-04 10:46:27 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:46:27 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:46:27 [DiscoveryClient-InstanceInfoReplicator-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more
2018-07-04 10:46:27 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:46:27 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:46:27 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:46:57 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:46:57 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:46:57 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:46:57 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:46:57 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:46:57 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:46:57 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:46:58 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:46:58 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:46:58 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:46:58 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:46:58 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:46:58 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:46:58 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:46:58 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:47:28 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:47:28 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:47:28 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:47:28 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:47:28 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:47:28 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:47:28 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:47:28 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:47:28 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:47:28 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:47:28 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:47:28 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:47:28 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:47:28 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:47:28 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:47:58 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:47:58 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:47:58 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:47:58 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:47:58 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:47:58 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:47:58 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:47:58 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:48:00 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
2018-07-04 10:48:00 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:48:00 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:48:00 [DiscoveryClient-InstanceInfoReplicator-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more
2018-07-04 10:48:00 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:48:00 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:48:00 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:48:00 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
2018-07-04 10:48:00 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:48:00 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:48:30 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:48:30 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:48:30 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:48:30 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:48:30 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:48:30 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:48:30 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:48:30 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:48:32 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
2018-07-04 10:48:32 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:48:32 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:48:32 [DiscoveryClient-InstanceInfoReplicator-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more
2018-07-04 10:48:32 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:48:32 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:48:32 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:48:32 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
2018-07-04 10:48:32 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:48:32 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:49:02 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:49:02 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:49:02 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:49:02 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:49:02 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:49:02 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:49:02 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:49:02 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:49:04 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
2018-07-04 10:49:04 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:49:04 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:49:04 [DiscoveryClient-InstanceInfoReplicator-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more
2018-07-04 10:49:04 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:49:04 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:49:04 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:49:04 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
2018-07-04 10:49:04 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:49:04 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:49:34 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:49:34 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:49:34 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:49:34 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:49:34 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:49:34 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:49:34 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:49:34 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:49:36 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
2018-07-04 10:49:36 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:49:36 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:49:36 [DiscoveryClient-InstanceInfoReplicator-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more
2018-07-04 10:49:36 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:49:36 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:49:36 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:49:36 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
2018-07-04 10:49:36 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:49:36 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:50:06 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:50:06 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:50:06 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:50:06 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:50:06 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:50:06 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:50:06 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:50:06 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:50:06 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:50:06 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:50:06 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:50:06 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:50:06 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:50:06 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:50:06 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:50:24 [AsyncResolver-bootstrap-executor-0] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 10:50:36 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:50:36 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:50:36 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:50:36 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:50:36 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:50:36 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:50:36 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:50:36 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:50:36 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:50:36 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:50:36 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:50:36 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:50:36 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:50:36 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failure with status code 401; retrying on another server if available
2018-07-04 10:50:36 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:51:06 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:51:06 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:51:06 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:51:06 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:51:06 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:51:06 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:51:06 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:51:06 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:51:08 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
2018-07-04 10:51:08 [DiscoveryClient-HeartbeatExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:51:08 [DiscoveryClient-HeartbeatExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:51:08 [DiscoveryClient-InstanceInfoReplicator-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more
2018-07-04 10:51:08 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:51:08 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:51:08 [DiscoveryClient-InstanceInfoReplicator-0] [WARN] [com.netflix.discovery.InstanceInfoReplicator] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:51:08 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
2018-07-04 10:51:08 [DiscoveryClient-CacheRefreshExecutor-0] [WARN] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-04 10:51:08 [DiscoveryClient-CacheRefreshExecutor-0] [ERROR] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 10:51:38 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:51:38 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:51:38 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:51:38 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:51:38 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:51:38 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:51:38 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:51:38 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:51:38 [DiscoveryClient-HeartbeatExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - Re-registering apps/SJTU_SE
2018-07-04 10:51:38 [DiscoveryClient-HeartbeatExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:51:38 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 10:51:38 [DiscoveryClient-HeartbeatExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 10:51:38 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 10:52:08 [DiscoveryClient-HeartbeatExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - Re-registering apps/SJTU_SE
2018-07-04 10:52:08 [DiscoveryClient-HeartbeatExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:52:08 [DiscoveryClient-HeartbeatExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 10:52:09 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:52:09 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:52:09 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:52:09 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:52:09 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:52:09 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: false
2018-07-04 10:52:09 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:52:09 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 10:59:29 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 10:59:33 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:59:33 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@309e345f: startup date [Wed Jul 04 10:59:33 CST 2018]; root of context hierarchy
2018-07-04 10:59:34 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 10:59:34 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$76b34a51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 10:59:36 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:59:36 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 10:59:36 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d6025c5: startup date [Wed Jul 04 10:59:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@309e345f
2018-07-04 10:59:38 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=1cf9e0ba-4907-37e6-8fcc-c2d0412e83ab
2018-07-04 10:59:38 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 10:59:38 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$76b34a51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 10:59:39 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 10:59:39 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3208 ms
2018-07-04 10:59:40 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 10:59:40 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 10:59:40 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@757c9fb9
2018-07-04 10:59:41 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:59:44 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 10:59:44 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:59:44 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:59:44 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:59:44 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:59:44 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 10:59:44 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 10:59:44 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 10:59:44 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 10:59:46 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@28f878a0, org.springframework.security.web.context.SecurityContextPersistenceFilter@548d5ed3, org.springframework.security.web.header.HeaderWriterFilter@68b58644, org.springframework.security.web.csrf.CsrfFilter@263bbfeb, org.springframework.security.web.authentication.logout.LogoutFilter@379ce046, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2e5ee2c9, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@633a2e99, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@719bb3b4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@58516c91, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7d5508e0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@20411320, org.springframework.security.web.session.SessionManagementFilter@6ae3fb94, org.springframework.security.web.access.ExceptionTranslationFilter@67594471, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3bd3d05e]
2018-07-04 10:59:46 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 10:59:46 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 10:59:46 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:59:46 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d6025c5: startup date [Wed Jul 04 10:59:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@309e345f
2018-07-04 10:59:47 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 10:59:47 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/producerHello]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello(java.lang.String)
2018-07-04 10:59:47 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 10:59:47 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:59:47 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:59:47 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:59:47 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:59:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 2 endpoint(s) beneath base path '/actuator'
2018-07-04 10:59:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 10:59:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 10:59:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:59:48 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 10:59:48 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 10:59:48 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 10:59:48 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 10:59:48 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 10:59:48 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 10:59:48 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4d6025c5,type=ConfigurationPropertiesRebinder]
2018-07-04 10:59:48 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 10:59:48 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 10:59:48 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 10:59:49 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 10:59:49 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 10:59:49 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 10:59:49 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 10:59:50 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 10:59:50 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 10:59:50 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 10:59:50 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 10:59:50 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 10:59:50 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 10:59:50 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 10:59:50 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 10:59:51 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 10:59:51 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 10:59:51 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 10:59:51 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530673191372 with initial instances count: 1
2018-07-04 10:59:51 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 10:59:51 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530673191381, current=UP, previous=STARTING]
2018-07-04 10:59:51 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 10:59:51 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 10:59:51 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 10:59:51 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 22.514 seconds (JVM running for 25.435)
2018-07-04 10:59:51 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 10:59:52 [RMI TCP Connection(5)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:59:52 [RMI TCP Connection(5)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 46 ms
2018-07-04 11:06:05 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 11:06:07 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 11:06:08 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@56a6d5a6: startup date [Wed Jul 04 11:06:08 CST 2018]; root of context hierarchy
2018-07-04 11:06:09 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 11:06:09 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$94c7873a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 11:06:12 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 11:06:12 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 11:06:12 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1df8b5b8: startup date [Wed Jul 04 11:06:12 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@56a6d5a6
2018-07-04 11:06:15 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=1cf9e0ba-4907-37e6-8fcc-c2d0412e83ab
2018-07-04 11:06:15 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 11:06:16 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$94c7873a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 11:06:16 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 11:06:19 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 6307 ms
2018-07-04 11:06:19 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 11:06:19 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 11:06:19 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@38602437
2018-07-04 11:06:21 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 11:06:23 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 11:06:24 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 11:06:24 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 11:06:24 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 11:06:24 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 11:06:24 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 11:06:24 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 11:06:24 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 11:06:24 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 11:06:25 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e5ee2c9, org.springframework.security.web.context.SecurityContextPersistenceFilter@327ed9f5, org.springframework.security.web.header.HeaderWriterFilter@2776015d, org.springframework.security.web.csrf.CsrfFilter@470a659f, org.springframework.security.web.authentication.logout.LogoutFilter@7c551ad4, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@61d34b4, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@61e7bf2f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6ab7ce48, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@756b58a7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@42d73c61, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@55a609dd, org.springframework.security.web.session.SessionManagementFilter@2e3f79a2, org.springframework.security.web.access.ExceptionTranslationFilter@74db12c2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2a03d65c]
2018-07-04 11:06:25 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 11:06:25 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 11:06:25 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:06:25 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1df8b5b8: startup date [Wed Jul 04 11:06:12 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@56a6d5a6
2018-07-04 11:06:25 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 11:06:25 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 11:06:25 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 11:06:25 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 11:06:25 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:06:25 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:06:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 2 endpoint(s) beneath base path '/actuator'
2018-07-04 11:06:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:06:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:06:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 11:06:27 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 11:06:27 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 11:06:27 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 11:06:27 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 11:06:27 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 11:06:27 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 11:06:27 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1df8b5b8,type=ConfigurationPropertiesRebinder]
2018-07-04 11:06:27 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 11:06:27 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 11:06:27 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 11:06:31 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 11:06:31 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 11:06:31 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 11:06:31 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 11:06:31 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 11:06:32 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 11:06:32 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 11:06:32 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 11:06:32 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 11:06:32 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 11:06:32 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 11:06:32 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 11:06:32 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 11:06:32 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 11:06:32 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 11:06:32 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530673592766 with initial instances count: 0
2018-07-04 11:06:32 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 11:06:32 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530673592801, current=UP, previous=STARTING]
2018-07-04 11:06:32 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 11:06:33 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 11:06:33 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 11:06:33 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 28.451 seconds (JVM running for 31.154)
2018-07-04 11:06:33 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 11:06:34 [RMI TCP Connection(3)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 11:06:34 [RMI TCP Connection(3)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2018-07-04 11:07:02 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 11:07:02 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 11:07:02 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 11:07:02 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 11:07:02 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 11:07:02 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: false
2018-07-04 11:07:02 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 11:07:02 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 11:30:47 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 11:30:50 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 11:30:51 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6d2a209c: startup date [Wed Jul 04 11:30:51 CST 2018]; root of context hierarchy
2018-07-04 11:30:51 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 11:30:51 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$57c38e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 11:30:53 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 11:30:53 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 11:30:53 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1cb346ea: startup date [Wed Jul 04 11:30:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6d2a209c
2018-07-04 11:30:55 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=1cf9e0ba-4907-37e6-8fcc-c2d0412e83ab
2018-07-04 11:30:55 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 11:30:55 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$57c38e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 11:30:56 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 11:30:57 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3953 ms
2018-07-04 11:30:57 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 11:30:57 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 11:30:57 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@46abe6a2
2018-07-04 11:30:59 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 11:31:01 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 11:31:01 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 11:31:01 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 11:31:01 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 11:31:01 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 11:31:01 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 11:31:01 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 11:31:01 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 11:31:01 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 11:31:03 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6dfcffb5, org.springframework.security.web.context.SecurityContextPersistenceFilter@61dde151, org.springframework.security.web.header.HeaderWriterFilter@28e19366, org.springframework.security.web.csrf.CsrfFilter@554cd74a, org.springframework.security.web.authentication.logout.LogoutFilter@5496c165, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@ca93621, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@7c891ba7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3d278b4d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5cb042da, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a34e9f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@184fb68d, org.springframework.security.web.session.SessionManagementFilter@10ef5fa0, org.springframework.security.web.access.ExceptionTranslationFilter@4726927c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5fb65013]
2018-07-04 11:31:03 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 11:31:03 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 11:31:03 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:31:03 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1cb346ea: startup date [Wed Jul 04 11:30:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6d2a209c
2018-07-04 11:31:03 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 11:31:03 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 11:31:03 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 11:31:03 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 11:31:03 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:31:03 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:31:05 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 2 endpoint(s) beneath base path '/actuator'
2018-07-04 11:31:05 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:05 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:05 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 11:31:05 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 11:31:05 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 11:31:05 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 11:31:05 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 11:31:05 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 11:31:05 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 11:31:05 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1cb346ea,type=ConfigurationPropertiesRebinder]
2018-07-04 11:31:05 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 11:31:05 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 11:31:05 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 11:31:06 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 11:31:06 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 11:31:06 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 11:31:06 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 11:31:07 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 11:31:07 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 11:31:07 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 11:31:07 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 11:31:07 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 11:31:07 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 11:31:07 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 11:31:07 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 11:31:08 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 11:31:08 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 11:31:08 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 11:31:08 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530675068040 with initial instances count: 0
2018-07-04 11:31:08 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 11:31:08 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530675068049, current=UP, previous=STARTING]
2018-07-04 11:31:08 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 11:31:08 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 11:31:08 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 11:31:08 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 21.163 seconds (JVM running for 23.682)
2018-07-04 11:31:08 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 11:31:09 [RMI TCP Connection(7)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 11:31:09 [RMI TCP Connection(7)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-07-04 11:31:27 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 11:31:30 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 11:31:31 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6b26e945: startup date [Wed Jul 04 11:31:31 CST 2018]; root of context hierarchy
2018-07-04 11:31:31 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 11:31:31 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$39ce13ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 11:31:33 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 11:31:33 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 11:31:33 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4f4c4b1a: startup date [Wed Jul 04 11:31:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6b26e945
2018-07-04 11:31:35 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=1cf9e0ba-4907-37e6-8fcc-c2d0412e83ab
2018-07-04 11:31:35 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 11:31:35 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$39ce13ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 11:31:35 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 11:31:36 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3017 ms
2018-07-04 11:31:36 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 11:31:36 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 11:31:36 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6509deff
2018-07-04 11:31:38 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 11:31:40 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 11:31:40 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 11:31:40 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 11:31:40 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 11:31:40 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 11:31:40 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 11:31:40 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 11:31:40 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 11:31:40 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 11:31:41 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@572e6fd9, org.springframework.security.web.context.SecurityContextPersistenceFilter@42d73c61, org.springframework.security.web.header.HeaderWriterFilter@d48673, org.springframework.security.web.csrf.CsrfFilter@3e84111a, org.springframework.security.web.authentication.logout.LogoutFilter@77e7246b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1416a80a, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@68fe48d7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@28f878a0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@96a75da, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@367d2816, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7f5eae0f, org.springframework.security.web.session.SessionManagementFilter@21c7208d, org.springframework.security.web.access.ExceptionTranslationFilter@45e22def, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7df76d99]
2018-07-04 11:31:41 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 11:31:41 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 11:31:41 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:31:42 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4f4c4b1a: startup date [Wed Jul 04 11:31:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6b26e945
2018-07-04 11:31:42 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 11:31:42 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 11:31:42 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 11:31:42 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 11:31:42 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:31:42 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 18 endpoint(s) beneath base path '/actuator'
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 11:31:43 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 11:31:43 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 11:31:43 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 11:31:43 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 11:31:43 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 11:31:43 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 11:31:43 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4f4c4b1a,type=ConfigurationPropertiesRebinder]
2018-07-04 11:31:43 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 11:31:43 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 11:31:43 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 11:31:43 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 11:31:43 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 11:31:43 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 11:31:43 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 11:31:44 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 11:31:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 11:31:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 11:31:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 11:31:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 11:31:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 11:31:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 11:31:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 11:31:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 11:31:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 11:31:44 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 11:31:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530675104722 with initial instances count: 1
2018-07-04 11:31:44 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 11:31:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530675104731, current=UP, previous=STARTING]
2018-07-04 11:31:44 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 11:31:44 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 11:31:44 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 11:31:44 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 11:31:44 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 17.84 seconds (JVM running for 20.254)
2018-07-04 11:31:45 [RMI TCP Connection(7)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 11:31:45 [RMI TCP Connection(7)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
2018-07-04 12:24:13 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 12:24:15 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:24:15 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@159f197: startup date [Wed Jul 04 12:24:15 CST 2018]; root of context hierarchy
2018-07-04 12:24:16 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 12:24:16 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d0b57bbe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:24:17 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:24:17 [main] [INFO] [com.eureka.server.ServerApplication] - No active profile set, falling back to default profiles: default
2018-07-04 12:24:17 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14a50707: startup date [Wed Jul 04 12:24:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@159f197
2018-07-04 12:24:19 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=d5f464e5-7267-3981-8b30-e4e5fa33af5d
2018-07-04 12:24:19 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 12:24:19 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d0b57bbe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:24:19 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8001 (http)
2018-07-04 12:24:19 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 1861 ms
2018-07-04 12:24:19 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 12:24:19 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 12:24:19 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2d8368a6
2018-07-04 12:24:22 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:24:23 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:24:24 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 12:24:24 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 12:24:24 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 12:24:24 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 12:24:24 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 12:24:24 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 12:24:24 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'servletContainer' to urls: [/eureka/*]
2018-07-04 12:24:24 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 12:24:24 [localhost-startStop-1] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 12:24:24 [localhost-startStop-1] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 12:24:24 [localhost-startStop-1] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 12:24:24 [localhost-startStop-1] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 12:24:24 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 12:24:24 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 12:24:24 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:24:25 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14a50707: startup date [Wed Jul 04 12:24:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@159f197
2018-07-04 12:24:25 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 12:24:25 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 12:24:25 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 12:24:25 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 12:24:25 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:24:25 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:24:25 [main] [INFO] [org.springframework.ui.freemarker.SpringTemplateLoader] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14a50707: startup date [Wed Jul 04 12:24:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@159f197] and template loader path [classpath:/templates/]
2018-07-04 12:24:25 [main] [INFO] [org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-04 12:24:26 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 12:24:26 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 12:24:26 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Client configured to neither register nor query for data.
2018-07-04 12:24:26 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530678266327 with initial instances count: 0
2018-07-04 12:24:26 [main] [INFO] [com.netflix.eureka.DefaultEurekaServerContext] - Initializing ...
2018-07-04 12:24:26 [main] [WARN] [com.netflix.eureka.cluster.PeerEurekaNodes] - The replica size seems to be empty. Check the route 53 DNS Registry
2018-07-04 12:24:26 [main] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Finished initializing remote region registries. All known remote regions: []
2018-07-04 12:24:26 [main] [INFO] [com.netflix.eureka.DefaultEurekaServerContext] - Initialized
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 18 endpoint(s) beneath base path '/actuator'
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 12:24:26 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 12:24:26 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 12:24:26 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 12:24:26 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 12:24:26 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 12:24:26 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 12:24:26 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=14a50707,type=ConfigurationPropertiesRebinder]
2018-07-04 12:24:26 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 12:24:26 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SE_groupServer with eureka with status UP
2018-07-04 12:24:26 [Thread-40] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Setting the eureka configuration..
2018-07-04 12:24:26 [Thread-40] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Eureka data center value eureka.datacenter is not set, defaulting to default
2018-07-04 12:24:26 [Thread-40] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Eureka environment value eureka.environment is not set, defaulting to test
2018-07-04 12:24:26 [Thread-40] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - isAws returned false
2018-07-04 12:24:26 [Thread-40] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Initialized server context
2018-07-04 12:24:26 [Thread-40] [INFO] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Got 1 instances from neighboring DS node
2018-07-04 12:24:26 [Thread-40] [INFO] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Renew threshold is: 1
2018-07-04 12:24:26 [Thread-40] [INFO] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Changing status to UP
2018-07-04 12:24:26 [Thread-40] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration] - Started Eureka Server
2018-07-04 12:24:26 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8001 (http) with context path ''
2018-07-04 12:24:26 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 8001
2018-07-04 12:24:26 [main] [INFO] [com.eureka.server.ServerApplication] - Started ServerApplication in 13.445 seconds (JVM running for 15.352)
2018-07-04 12:24:27 [RMI TCP Connection(2)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 12:24:27 [RMI TCP Connection(2)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
2018-07-04 12:24:53 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 12:24:55 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:24:55 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7a4ccb53: startup date [Wed Jul 04 12:24:55 CST 2018]; root of context hierarchy
2018-07-04 12:24:56 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 12:24:56 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d1d5f9d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:24:57 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:25:00 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 12:25:00 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f1c29b7: startup date [Wed Jul 04 12:25:00 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7a4ccb53
2018-07-04 12:25:02 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=1cf9e0ba-4907-37e6-8fcc-c2d0412e83ab
2018-07-04 12:25:02 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 12:25:02 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d1d5f9d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:25:02 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 12:25:03 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2806 ms
2018-07-04 12:25:04 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 12:25:04 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 12:25:04 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@49d67f0c
2018-07-04 12:25:05 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:25:07 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:25:07 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 12:25:07 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 12:25:07 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 12:25:07 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 12:25:07 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 12:25:07 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 12:25:07 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 12:25:07 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 12:25:08 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@719bb3b4, org.springframework.security.web.context.SecurityContextPersistenceFilter@45e22def, org.springframework.security.web.header.HeaderWriterFilter@327ed9f5, org.springframework.security.web.csrf.CsrfFilter@6ec65b5e, org.springframework.security.web.authentication.logout.LogoutFilter@367d2816, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6ab7ce48, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@7c551ad4, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@55a609dd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4417af13, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@25e49cb2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@52cb4f50, org.springframework.security.web.session.SessionManagementFilter@756b58a7, org.springframework.security.web.access.ExceptionTranslationFilter@2e3f79a2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@50d951e7]
2018-07-04 12:25:08 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 12:25:08 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 12:25:08 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:25:08 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f1c29b7: startup date [Wed Jul 04 12:25:00 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7a4ccb53
2018-07-04 12:25:08 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 12:25:08 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 12:25:08 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 12:25:08 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 12:25:08 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:25:08 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 18 endpoint(s) beneath base path '/actuator'
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 12:25:09 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 12:25:09 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 12:25:09 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 12:25:09 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 12:25:09 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 12:25:09 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 12:25:09 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6f1c29b7,type=ConfigurationPropertiesRebinder]
2018-07-04 12:25:09 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 12:25:09 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 12:25:09 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 12:25:10 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 12:25:10 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 12:25:10 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 12:25:10 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 12:25:10 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 12:25:10 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 12:25:10 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 12:25:10 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 12:25:10 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 12:25:10 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 12:25:10 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 12:25:10 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 12:25:12 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 12:25:12 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 12:25:12 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 12:25:12 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530678312498 with initial instances count: 0
2018-07-04 12:25:12 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 12:25:12 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530678312507, current=UP, previous=STARTING]
2018-07-04 12:25:12 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 12:25:12 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 12:25:12 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 12:25:12 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 20.098 seconds (JVM running for 21.913)
2018-07-04 12:25:13 [RMI TCP Connection(2)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 12:25:13 [http-nio-8001-exec-2] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Registered instance SJTU_SE/localhost:SJTU_SE:9001 with status UP (replication=false)
2018-07-04 12:25:13 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 12:25:13 [RMI TCP Connection(2)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2018-07-04 12:25:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 12:25:42 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 12:25:42 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 12:25:42 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 12:25:42 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 12:25:42 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 12:25:42 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: false
2018-07-04 12:25:42 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 12:25:42 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 12:26:20 [http-nio-9001-exec-4] [INFO] [java.lang.Class] - This is info message.
2018-07-04 12:26:20 [http-nio-9001-exec-4] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 12:26:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 12:27:22 [http-nio-9001-exec-5] [INFO] [java.lang.Class] - This is info message.
2018-07-04 12:27:22 [http-nio-9001-exec-5] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 12:27:22 [http-nio-9001-exec-1] [INFO] [java.lang.Class] - This is info message.
2018-07-04 12:27:22 [http-nio-9001-exec-1] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 12:27:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 12:28:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 1ms
2018-07-04 12:29:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 1ms
2018-07-04 12:30:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 12:31:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 12:32:21 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 12:32:24 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:32:24 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@794cb805: startup date [Wed Jul 04 12:32:24 CST 2018]; root of context hierarchy
2018-07-04 12:32:24 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 12:32:24 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$74cf5e1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:32:26 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:32:26 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 12:32:26 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c39680d: startup date [Wed Jul 04 12:32:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@794cb805
2018-07-04 12:32:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 12:32:27 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=dc7f993f-ccf7-3629-8f0c-eaf032efa262
2018-07-04 12:32:27 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 12:32:28 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$74cf5e1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:32:28 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 12:32:29 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2988 ms
2018-07-04 12:32:30 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 12:32:30 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 12:32:30 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@38ee5b26
2018-07-04 12:32:32 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:32:33 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:32:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 12:32:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'tracingFilter' to: [/*]
2018-07-04 12:32:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'exceptionLoggingFilter' to: [/*]
2018-07-04 12:32:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 12:32:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 12:32:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 12:32:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 12:32:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 12:32:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 12:32:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 12:32:35 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5b7c8930, org.springframework.security.web.context.SecurityContextPersistenceFilter@77865933, org.springframework.security.web.header.HeaderWriterFilter@2975a9e, org.springframework.security.web.csrf.CsrfFilter@2fcd7d3f, org.springframework.security.web.authentication.logout.LogoutFilter@26bbe604, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@57cb70be, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@446626a7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@22ebccb9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@44032fde, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d1cbd0f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58867cd5, org.springframework.security.web.session.SessionManagementFilter@2dd0f797, org.springframework.security.web.access.ExceptionTranslationFilter@2373ad99, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1f03fba0]
2018-07-04 12:32:35 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 12:32:35 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 12:32:35 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:32:35 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c39680d: startup date [Wed Jul 04 12:32:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@794cb805
2018-07-04 12:32:35 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 12:32:35 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 12:32:35 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 12:32:35 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 12:32:35 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:32:35 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 18 endpoint(s) beneath base path '/actuator'
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 12:32:37 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 12:32:37 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 12:32:37 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 12:32:37 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 12:32:37 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 12:32:37 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 12:32:37 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1c39680d,type=ConfigurationPropertiesRebinder]
2018-07-04 12:32:37 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 12:32:37 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 12:32:37 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 12:32:37 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 12:32:37 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 12:32:38 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 12:32:38 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 12:32:38 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 12:32:38 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 12:32:38 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 12:32:38 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 12:32:38 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 12:32:38 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 12:32:38 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 12:32:38 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 12:32:38 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 12:32:38 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 12:32:38 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 12:32:38 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530678758957 with initial instances count: 1
2018-07-04 12:32:38 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 12:32:38 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530678758969, current=UP, previous=STARTING]
2018-07-04 12:32:38 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 12:32:39 [http-nio-8001-exec-10] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Registered instance SJTU_SE/localhost:SJTU_SE:9001 with status UP (replication=false)
2018-07-04 12:32:39 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 12:32:39 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 12:32:39 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 12:32:39 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 17.662 seconds (JVM running for 20.871)
2018-07-04 12:32:39 [RMI TCP Connection(6)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 12:32:39 [RMI TCP Connection(6)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2018-07-04 12:33:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 12:33:53 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@635e2147}] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing SpringClientFactory-localhost: startup date [Wed Jul 04 12:33:53 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c39680d
2018-07-04 12:33:53 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@635e2147}] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 12:33:53 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@635e2147}] [INFO] [com.netflix.config.ChainedDynamicProperty] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-07-04 12:33:53 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@635e2147}] [INFO] [com.netflix.util.concurrent.ShutdownEnabledTimer] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
2018-07-04 12:33:53 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@635e2147}] [INFO] [com.netflix.loadbalancer.BaseLoadBalancer] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-07-04 12:33:53 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@635e2147}] [INFO] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] - Using serverListUpdater PollingServerListUpdater
2018-07-04 12:33:53 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@635e2147}] [INFO] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@32933d1c
2018-07-04 12:34:26 [Eureka-PeerNodesUpdater] [WARN] [com.netflix.eureka.cluster.PeerEurekaNodes] - The replica size seems to be empty. Check the route 53 DNS Registry
2018-07-04 12:34:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 12:35:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 12:36:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 12:37:05 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 12:37:08 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:37:08 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4386f16: startup date [Wed Jul 04 12:37:08 CST 2018]; root of context hierarchy
2018-07-04 12:37:09 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 12:37:09 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ca5d5115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:37:10 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:37:11 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 12:37:11 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@48c76607: startup date [Wed Jul 04 12:37:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4386f16
2018-07-04 12:37:13 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=dc7f993f-ccf7-3629-8f0c-eaf032efa262
2018-07-04 12:37:13 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 12:37:14 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ca5d5115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:37:14 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 12:37:15 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3847 ms
2018-07-04 12:37:16 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 12:37:16 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 12:37:16 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7391f885
2018-07-04 12:37:19 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:37:20 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:37:21 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 12:37:21 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'tracingFilter' to: [/*]
2018-07-04 12:37:21 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'exceptionLoggingFilter' to: [/*]
2018-07-04 12:37:21 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 12:37:21 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 12:37:21 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 12:37:21 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 12:37:21 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 12:37:21 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 12:37:21 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 12:37:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 12:37:27 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 12:37:29 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:37:29 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4313f5bc: startup date [Wed Jul 04 12:37:29 CST 2018]; root of context hierarchy
2018-07-04 12:37:30 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 12:37:30 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d995e383] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:37:31 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:37:31 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 12:37:31 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e3c0e40: startup date [Wed Jul 04 12:37:31 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4313f5bc
2018-07-04 12:37:32 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=dc7f993f-ccf7-3629-8f0c-eaf032efa262
2018-07-04 12:37:32 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 12:37:33 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d995e383] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:37:33 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 12:37:33 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2265 ms
2018-07-04 12:37:34 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 12:37:34 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 12:37:34 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@45f991ab
2018-07-04 12:37:36 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:37:38 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:37:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 12:37:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'tracingFilter' to: [/*]
2018-07-04 12:37:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'exceptionLoggingFilter' to: [/*]
2018-07-04 12:37:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 12:37:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 12:37:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 12:37:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 12:37:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 12:37:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 12:37:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 12:37:39 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@26c89563, org.springframework.security.web.context.SecurityContextPersistenceFilter@3722c145, org.springframework.security.web.header.HeaderWriterFilter@15405bd6, org.springframework.security.web.csrf.CsrfFilter@2bc426f0, org.springframework.security.web.authentication.logout.LogoutFilter@f88bfbe, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@75a0c890, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1b7a52dd, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@235d29d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@424de326, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@44032fde, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3bd6ba24, org.springframework.security.web.session.SessionManagementFilter@6f1a16fe, org.springframework.security.web.access.ExceptionTranslationFilter@617389a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2c88a3e8]
2018-07-04 12:37:39 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 12:37:39 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 12:37:39 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:37:40 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e3c0e40: startup date [Wed Jul 04 12:37:31 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4313f5bc
2018-07-04 12:37:40 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 12:37:40 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 12:37:40 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 12:37:40 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 12:37:40 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:37:40 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 18 endpoint(s) beneath base path '/actuator'
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 12:37:43 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 12:37:43 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 12:37:43 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 12:37:43 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 12:37:43 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 12:37:43 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 12:37:43 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=e3c0e40,type=ConfigurationPropertiesRebinder]
2018-07-04 12:37:43 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 12:37:43 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 12:37:43 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 12:37:44 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 12:37:44 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 12:37:44 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 12:37:44 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 12:37:44 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 12:37:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 12:37:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 12:37:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 12:37:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 12:37:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 12:37:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 12:37:44 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 12:37:45 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 12:37:45 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 12:37:45 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 12:37:45 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530679065119 with initial instances count: 1
2018-07-04 12:37:45 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 12:37:45 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530679065129, current=UP, previous=STARTING]
2018-07-04 12:37:45 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 12:37:45 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 12:37:45 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 12:37:45 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 18.04 seconds (JVM running for 19.673)
2018-07-04 12:37:45 [http-nio-8001-exec-2] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Registered instance SJTU_SE/localhost:SJTU_SE:9001 with status UP (replication=false)
2018-07-04 12:37:45 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 12:37:46 [RMI TCP Connection(4)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 12:37:46 [RMI TCP Connection(4)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2018-07-04 12:38:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 12:39:01 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 12:39:03 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:39:04 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@59d016c9: startup date [Wed Jul 04 12:39:04 CST 2018]; root of context hierarchy
2018-07-04 12:39:04 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 12:39:04 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b63cf02b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:39:05 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:39:06 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 12:39:06 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62833051: startup date [Wed Jul 04 12:39:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@59d016c9
2018-07-04 12:39:07 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=dc7f993f-ccf7-3629-8f0c-eaf032efa262
2018-07-04 12:39:07 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 12:39:07 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b63cf02b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:39:08 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 12:39:08 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2574 ms
2018-07-04 12:39:09 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 12:39:09 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 12:39:09 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@e4a2cd8
2018-07-04 12:39:11 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:39:12 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:39:13 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 12:39:13 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'tracingFilter' to: [/*]
2018-07-04 12:39:13 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'exceptionLoggingFilter' to: [/*]
2018-07-04 12:39:13 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 12:39:13 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 12:39:13 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 12:39:13 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 12:39:13 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 12:39:13 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 12:39:13 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 12:39:14 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58867cd5, org.springframework.security.web.context.SecurityContextPersistenceFilter@480ad82c, org.springframework.security.web.header.HeaderWriterFilter@765ffb14, org.springframework.security.web.csrf.CsrfFilter@27e7c77f, org.springframework.security.web.authentication.logout.LogoutFilter@fe34b86, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2d4608a6, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@429f7919, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5875de6a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7b676112, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6fa13e6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@40e32762, org.springframework.security.web.session.SessionManagementFilter@67064bdc, org.springframework.security.web.access.ExceptionTranslationFilter@33634f04, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@17dd671f]
2018-07-04 12:39:14 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 12:39:14 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 12:39:14 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:39:14 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62833051: startup date [Wed Jul 04 12:39:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@59d016c9
2018-07-04 12:39:14 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 12:39:14 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 12:39:14 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 12:39:14 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 12:39:14 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:39:14 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 18 endpoint(s) beneath base path '/actuator'
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 12:39:16 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 12:39:16 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 12:39:16 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 12:39:16 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 12:39:16 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 12:39:16 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 12:39:16 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=62833051,type=ConfigurationPropertiesRebinder]
2018-07-04 12:39:16 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 12:39:16 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 12:39:16 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 12:39:17 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 12:39:17 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 12:39:17 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 12:39:17 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 12:39:17 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 12:39:17 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 12:39:17 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 12:39:17 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 12:39:17 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 12:39:17 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 12:39:17 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 12:39:17 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 12:39:17 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 12:39:17 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 12:39:17 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 12:39:17 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530679157985 with initial instances count: 1
2018-07-04 12:39:18 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 12:39:18 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530679158003, current=UP, previous=STARTING]
2018-07-04 12:39:18 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 12:39:18 [http-nio-8001-exec-3] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Registered instance SJTU_SE/localhost:SJTU_SE:9001 with status UP (replication=false)
2018-07-04 12:39:18 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 12:39:18 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 12:39:18 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 12:39:18 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 16.702 seconds (JVM running for 18.773)
2018-07-04 12:39:18 [RMI TCP Connection(6)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 12:39:18 [RMI TCP Connection(6)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2018-07-04 12:39:26 [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater] [INFO] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Current renewal threshold is : 3
2018-07-04 12:39:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 12:40:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 12:41:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 1ms
2018-07-04 12:42:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 12:43:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 52ms
2018-07-04 12:43:57 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 12:43:59 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:44:00 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@460d0a57: startup date [Wed Jul 04 12:44:00 CST 2018]; root of context hierarchy
2018-07-04 12:44:00 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 12:44:00 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2dd61759] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:44:02 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:44:02 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 12:44:02 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fc79729: startup date [Wed Jul 04 12:44:02 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@460d0a57
2018-07-04 12:44:03 [main] [INFO] [org.springframework.integration.config.IntegrationRegistrar] - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2018-07-04 12:44:06 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=5c84c677-3495-33bd-b7bf-151e0e894b41
2018-07-04 12:44:07 [main] [INFO] [org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor] - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2018-07-04 12:44:07 [main] [INFO] [org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor] - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2018-07-04 12:44:07 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 12:44:07 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$d827d28a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:44:08 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$7cadcf8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:44:08 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2dd61759] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:44:08 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.integration.dsl.context.IntegrationFlowContext' of type [org.springframework.integration.dsl.context.IntegrationFlowContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 12:44:09 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 12:44:10 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 8345 ms
2018-07-04 12:44:11 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 12:44:11 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 12:44:11 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3c5d1f53
2018-07-04 12:44:16 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:44:18 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 12:44:18 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 12:44:18 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'tracingFilter' to: [/*]
2018-07-04 12:44:18 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'exceptionLoggingFilter' to: [/*]
2018-07-04 12:44:18 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 12:44:18 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 12:44:18 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 12:44:18 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 12:44:18 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 12:44:18 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 12:44:18 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 12:44:20 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3eb3232b, org.springframework.security.web.context.SecurityContextPersistenceFilter@1220ef43, org.springframework.security.web.header.HeaderWriterFilter@2da16263, org.springframework.security.web.csrf.CsrfFilter@338766de, org.springframework.security.web.authentication.logout.LogoutFilter@7d21852b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@51dae791, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@346f41a9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@abbe000, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49fa1d74, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3811510, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@69cd1085, org.springframework.security.web.session.SessionManagementFilter@311ff287, org.springframework.security.web.access.ExceptionTranslationFilter@421def93, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7cf78c85]
2018-07-04 12:44:20 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 12:44:20 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 12:44:20 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:44:20 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fc79729: startup date [Wed Jul 04 12:44:02 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@460d0a57
2018-07-04 12:44:20 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 12:44:20 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 12:44:20 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 12:44:20 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 12:44:20 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:44:20 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 12:44:22 [main] [INFO] [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService  'taskScheduler'
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 18 endpoint(s) beneath base path '/actuator'
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 12:44:25 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 12:44:25 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2018-07-04 12:44:25 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 12:44:25 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'integrationMbeanExporter' has been autodetected for JMX exposure
2018-07-04 12:44:25 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 12:44:25 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 12:44:25 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 12:44:25 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 12:44:25 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'integrationMbeanExporter': registering with JMX server as MBean [org.springframework.integration.monitor:name=integrationMbeanExporter,type=IntegrationMBeanExporter]
2018-07-04 12:44:25 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3fc79729,type=ConfigurationPropertiesRebinder]
2018-07-04 12:44:26 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2018-07-04 12:44:26 [main] [INFO] [org.springframework.integration.monitor.IntegrationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 12:44:26 [main] [INFO] [org.springframework.integration.monitor.IntegrationMBeanExporter] - Registering MessageChannel errorChannel
2018-07-04 12:44:26 [main] [INFO] [org.springframework.integration.monitor.IntegrationMBeanExporter] - Located managed bean 'org.springframework.integration:type=MessageChannel,name=errorChannel': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=errorChannel]
2018-07-04 12:44:26 [main] [INFO] [org.springframework.integration.monitor.IntegrationMBeanExporter] - Registering MessageChannel nullChannel
2018-07-04 12:44:26 [main] [INFO] [org.springframework.integration.monitor.IntegrationMBeanExporter] - Located managed bean 'org.springframework.integration:type=MessageChannel,name=nullChannel': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=nullChannel]
2018-07-04 12:44:26 [main] [INFO] [org.springframework.integration.monitor.IntegrationMBeanExporter] - Registering MessageHandler errorLogger
2018-07-04 12:44:26 [main] [INFO] [org.springframework.integration.monitor.IntegrationMBeanExporter] - Located managed bean 'org.springframework.integration:type=MessageHandler,name=errorLogger,bean=internal': registering with JMX server as MBean [org.springframework.integration:type=MessageHandler,name=errorLogger,bean=internal]
2018-07-04 12:44:26 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 12:44:26 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 12:44:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 72ms
2018-07-04 12:44:26 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 12:44:27 [Eureka-PeerNodesUpdater] [WARN] [com.netflix.eureka.cluster.PeerEurekaNodes] - The replica size seems to be empty. Check the route 53 DNS Registry
2018-07-04 12:44:28 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 12:44:28 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 12:44:29 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 12:44:29 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 12:44:30 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 12:44:31 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 12:44:31 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 12:44:31 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 12:44:31 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 12:44:31 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 12:44:31 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 12:44:31 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 12:44:31 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 12:44:31 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 12:44:31 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 12:44:31 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530679471879 with initial instances count: 1
2018-07-04 12:44:31 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 12:44:31 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530679471899, current=UP, previous=STARTING]
2018-07-04 12:44:31 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 12:44:31 [main] [INFO] [org.springframework.integration.endpoint.EventDrivenConsumer] - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2018-07-04 12:44:31 [main] [INFO] [org.springframework.integration.channel.PublishSubscribeChannel] - Channel 'application-1.errorChannel' has 1 subscriber(s).
2018-07-04 12:44:31 [main] [INFO] [org.springframework.integration.endpoint.EventDrivenConsumer] - started _org.springframework.integration.errorLogger
2018-07-04 12:44:31 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 2147483647
2018-07-04 12:44:32 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 12:44:32 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 12:44:32 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 35.009 seconds (JVM running for 38.009)
2018-07-04 12:44:32 [http-nio-8001-exec-5] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Registered instance SJTU_SE/localhost:SJTU_SE:9001 with status UP (replication=false)
2018-07-04 12:44:32 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 12:44:32 [http-nio-9001-exec-1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 12:44:32 [http-nio-9001-exec-1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 117 ms
2018-07-04 12:44:33 [RMI TCP Connection(2)-127.0.0.1] [INFO] [org.springframework.amqp.rabbit.connection.CachingConnectionFactory] - Attempting to connect to: [localhost:5672]
2018-07-04 12:44:35 [RMI TCP Connection(2)-127.0.0.1] [WARN] [org.springframework.boot.actuate.amqp.RabbitHealthIndicator] - Rabbit health check failed
org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Connection refused: connect
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:62)
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:476)
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:614)
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:240)
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:1797)
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:1771)
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:1752)
	at org.springframework.boot.actuate.amqp.RabbitHealthIndicator.getVersion(RabbitHealthIndicator.java:48)
	at org.springframework.boot.actuate.amqp.RabbitHealthIndicator.doHealthCheck(RabbitHealthIndicator.java:44)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:84)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:68)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:223)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:76)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:61)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:126)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:99)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1468)
	at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1309)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1401)
	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at sun.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:361)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:60)
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:955)
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:907)
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:847)
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:449)
	... 42 more
2018-07-04 12:45:26 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:01:18 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 13:01:21 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:01:21 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4278a03f: startup date [Wed Jul 04 13:01:21 CST 2018]; root of context hierarchy
2018-07-04 13:01:22 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:01:22 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$94cef5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:01:24 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:01:25 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 13:01:25 [main] [INFO] [com.eureka.server.ServerApplication] - No active profile set, falling back to default profiles: default
2018-07-04 13:01:25 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@407a7f2a: startup date [Wed Jul 04 13:01:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4278a03f
2018-07-04 13:01:27 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=d5f464e5-7267-3981-8b30-e4e5fa33af5d
2018-07-04 13:01:27 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:01:27 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$94cef5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:01:28 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8001 (http)
2018-07-04 13:01:28 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3444 ms
2018-07-04 13:01:29 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:01:29 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:01:29 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:01:29 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@63bd3184
2018-07-04 13:01:29 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@47d90b9e: startup date [Wed Jul 04 13:01:29 CST 2018]; root of context hierarchy
2018-07-04 13:01:29 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:01:29 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ea40df5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:01:31 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:01:31 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:01:33 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 13:01:33 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@34f6515b: startup date [Wed Jul 04 13:01:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@47d90b9e
2018-07-04 13:01:34 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:01:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:01:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:01:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:01:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:01:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 13:01:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 13:01:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'servletContainer' to urls: [/eureka/*]
2018-07-04 13:01:34 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 13:01:35 [localhost-startStop-1] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 13:01:35 [localhost-startStop-1] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 13:01:35 [main] [INFO] [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2018-07-04 13:01:35 [main] [INFO] [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2018-07-04 13:01:35 [localhost-startStop-1] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 13:01:35 [localhost-startStop-1] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 13:01:36 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=7e0f6a32-90a0-3956-9714-5506b06ee3a0
2018-07-04 13:01:36 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:01:36 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:01:36 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:01:36 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:01:38 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@407a7f2a: startup date [Wed Jul 04 13:01:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4278a03f
2018-07-04 13:01:38 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:01:38 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:01:38 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 13:01:38 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 13:01:38 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ea40df5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:01:38 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:01:38 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:01:39 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.ui.freemarker.SpringTemplateLoader] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@407a7f2a: startup date [Wed Jul 04 13:01:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4278a03f] and template loader path [classpath:/templates/]
2018-07-04 13:01:40 [main] [INFO] [org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-04 13:01:40 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 7534 ms
2018-07-04 13:01:40 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 13:01:40 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 13:01:40 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Client configured to neither register nor query for data.
2018-07-04 13:01:40 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530680500733 with initial instances count: 0
2018-07-04 13:01:40 [main] [INFO] [com.netflix.eureka.DefaultEurekaServerContext] - Initializing ...
2018-07-04 13:01:40 [main] [WARN] [com.netflix.eureka.cluster.PeerEurekaNodes] - The replica size seems to be empty. Check the route 53 DNS Registry
2018-07-04 13:01:40 [main] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Finished initializing remote region registries. All known remote regions: []
2018-07-04 13:01:40 [main] [INFO] [com.netflix.eureka.DefaultEurekaServerContext] - Initialized
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 18 endpoint(s) beneath base path '/actuator'
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:40 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:01:41 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 13:01:41 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 13:01:41 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 13:01:41 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 13:01:41 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 13:01:41 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 13:01:41 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:01:41 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:01:41 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=407a7f2a,type=ConfigurationPropertiesRebinder]
2018-07-04 13:01:41 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@299d166f
2018-07-04 13:01:41 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 13:01:41 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SE_groupServer with eureka with status UP
2018-07-04 13:01:41 [Thread-47] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Setting the eureka configuration..
2018-07-04 13:01:41 [Thread-47] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Eureka data center value eureka.datacenter is not set, defaulting to default
2018-07-04 13:01:41 [Thread-47] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Eureka environment value eureka.environment is not set, defaulting to test
2018-07-04 13:01:41 [Thread-47] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - isAws returned false
2018-07-04 13:01:41 [Thread-47] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Initialized server context
2018-07-04 13:01:41 [Thread-47] [INFO] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Got 1 instances from neighboring DS node
2018-07-04 13:01:41 [Thread-47] [INFO] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Renew threshold is: 1
2018-07-04 13:01:41 [Thread-47] [INFO] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Changing status to UP
2018-07-04 13:01:41 [Thread-47] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration] - Started Eureka Server
2018-07-04 13:01:41 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8001 (http) with context path ''
2018-07-04 13:01:41 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 8001
2018-07-04 13:01:41 [main] [INFO] [com.eureka.server.ServerApplication] - Started ServerApplication in 23.337 seconds (JVM running for 40.61)
2018-07-04 13:01:42 [RMI TCP Connection(3)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:01:42 [RMI TCP Connection(3)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
2018-07-04 13:01:43 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:01:46 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:01:49 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:01:49 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:01:49 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:01:49 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:01:49 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 13:01:49 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 13:01:49 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 13:01:49 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 13:01:49 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet zuulServlet mapped to [/zuul/*]
2018-07-04 13:01:49 [localhost-startStop-1] [INFO] [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar] - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2018-07-04 13:01:50 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2643d762, org.springframework.security.web.context.SecurityContextPersistenceFilter@35d5ac51, org.springframework.security.web.header.HeaderWriterFilter@1a4d1ab7, org.springframework.security.web.csrf.CsrfFilter@59f93db8, org.springframework.security.web.authentication.logout.LogoutFilter@34d52ecd, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@433348bc, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5e65afb6, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7ff35a3f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2a3194c6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5b9396d3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6403e24c, org.springframework.security.web.session.SessionManagementFilter@4674d90, org.springframework.security.web.access.ExceptionTranslationFilter@6724cdec, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4fc3c165]
2018-07-04 13:01:50 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:01:50 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:01:50 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:01:51 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@34f6515b: startup date [Wed Jul 04 13:01:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@47d90b9e
2018-07-04 13:01:51 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 13:01:51 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 13:01:51 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:01:51 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:01:51 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:01:51 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:01:53 [main] [INFO] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] - Starting filter initializer
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 21 endpoint(s) beneath base path '/actuator'
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes/{format}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/filters],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:01:54 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 13:01:54 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 13:01:54 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 13:01:54 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 13:01:54 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 13:01:54 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 13:01:54 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=34f6515b,type=ConfigurationPropertiesRebinder]
2018-07-04 13:01:54 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 13:01:54 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 13:01:54 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 13:01:54 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 13:01:54 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 13:01:54 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 13:01:54 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 13:01:54 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 13:01:54 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 13:01:54 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 13:01:54 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 13:01:54 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 13:01:54 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 13:01:54 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 13:01:54 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 13:01:55 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 13:01:55 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 13:01:55 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 13:01:55 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530680515265 with initial instances count: 0
2018-07-04 13:01:55 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 13:01:55 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530680515276, current=UP, previous=STARTING]
2018-07-04 13:01:55 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 13:01:55 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 13:01:55 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 13:01:55 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 30.991 seconds (JVM running for 33.183)
2018-07-04 13:01:55 [http-nio-8001-exec-9] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Registered instance SJTU_SE/localhost:SJTU_SE:9001 with status UP (replication=false)
2018-07-04 13:01:55 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 13:01:57 [RMI TCP Connection(2)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:01:57 [RMI TCP Connection(2)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2018-07-04 13:02:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 13:02:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 13:02:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 13:02:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 13:02:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 13:02:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: false
2018-07-04 13:02:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 13:02:25 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 13:02:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:02:47 [http-nio-9001-exec-7] [INFO] [org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping] - Mapped URL path [/api-service/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-07-04 13:02:47 [http-nio-9001-exec-7] [INFO] [org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping] - Mapped URL path [/sjtu_se/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-07-04 13:03:01 [http-nio-9001-exec-9] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing SpringClientFactory-demo-feign-freeservice: startup date [Wed Jul 04 13:03:01 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@34f6515b
2018-07-04 13:03:01 [http-nio-9001-exec-9] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:03:01 [http-nio-9001-exec-9] [INFO] [com.netflix.config.ChainedDynamicProperty] - Flipping property: demo-feign-freeservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-07-04 13:03:01 [http-nio-9001-exec-9] [INFO] [com.netflix.util.concurrent.ShutdownEnabledTimer] - Shutdown hook installed for: NFLoadBalancer-PingTimer-demo-feign-freeservice
2018-07-04 13:03:02 [http-nio-9001-exec-9] [INFO] [com.netflix.loadbalancer.BaseLoadBalancer] - Client: demo-feign-freeservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=demo-feign-freeservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-07-04 13:03:02 [http-nio-9001-exec-9] [INFO] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] - Using serverListUpdater PollingServerListUpdater
2018-07-04 13:03:02 [http-nio-9001-exec-9] [INFO] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] - DynamicServerListLoadBalancer for client demo-feign-freeservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=demo-feign-freeservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@b8ff64b
2018-07-04 13:03:02 [http-nio-9001-exec-9] [WARN] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: demo-feign-freeservice
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:159)
	... 105 more
2018-07-04 13:03:41 [http-nio-9001-exec-8] [WARN] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: demo-feign-freeservice
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:159)
	... 105 more
2018-07-04 13:03:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:03:43 [http-nio-9001-exec-6] [WARN] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: demo-feign-freeservice
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:159)
	... 105 more
2018-07-04 13:03:46 [http-nio-9001-exec-7] [WARN] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: demo-feign-freeservice
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:159)
	... 105 more
2018-07-04 13:03:49 [http-nio-9001-exec-5] [WARN] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: demo-feign-freeservice
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:159)
	... 105 more
2018-07-04 13:03:54 [http-nio-9001-exec-4] [WARN] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: demo-feign-freeservice
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:159)
	... 105 more
2018-07-04 13:04:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:05:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:05:49 [http-nio-9001-exec-1] [INFO] [java.lang.Class] - This is info message.
2018-07-04 13:05:49 [http-nio-9001-exec-1] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 13:05:50 [http-nio-9001-exec-8] [INFO] [java.lang.Class] - This is info message.
2018-07-04 13:05:50 [http-nio-9001-exec-8] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 13:06:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 3ms
2018-07-04 13:06:54 [AsyncResolver-bootstrap-executor-0] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 13:07:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:07:59 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 13:08:01 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:08:01 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5dd6264: startup date [Wed Jul 04 13:08:01 CST 2018]; root of context hierarchy
2018-07-04 13:08:02 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:08:02 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e68a4301] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:08:04 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:08:04 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 13:08:05 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37fb0bed: startup date [Wed Jul 04 13:08:05 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5dd6264
2018-07-04 13:08:06 [main] [INFO] [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2018-07-04 13:08:06 [main] [INFO] [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2018-07-04 13:08:07 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=7e0f6a32-90a0-3956-9714-5506b06ee3a0
2018-07-04 13:08:07 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:08:07 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e68a4301] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:08:10 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 13:08:11 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 6688 ms
2018-07-04 13:08:12 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:08:12 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:08:12 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@16c13e6c
2018-07-04 13:08:14 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:08:16 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:08:17 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:08:17 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:08:17 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:08:17 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:08:17 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 13:08:17 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 13:08:17 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 13:08:17 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 13:08:17 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet zuulServlet mapped to [/zuul/*]
2018-07-04 13:08:17 [localhost-startStop-1] [INFO] [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar] - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2018-07-04 13:08:17 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5e1d03d7, org.springframework.security.web.context.SecurityContextPersistenceFilter@14982a82, org.springframework.security.web.header.HeaderWriterFilter@51288417, org.springframework.security.web.csrf.CsrfFilter@612e21b9, org.springframework.security.web.authentication.logout.LogoutFilter@5f038248, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6b2e46af, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@62e93c3a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3374b5bc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@72f8ae0c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@e9ef5b6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4047d2d9, org.springframework.security.web.session.SessionManagementFilter@1e0895f5, org.springframework.security.web.access.ExceptionTranslationFilter@472a11ae, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@767191b1]
2018-07-04 13:08:17 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:08:17 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:08:17 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:08:18 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37fb0bed: startup date [Wed Jul 04 13:08:05 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5dd6264
2018-07-04 13:08:18 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 13:08:18 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 13:08:18 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:08:18 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:08:18 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:08:18 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:08:20 [main] [INFO] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] - Starting filter initializer
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 21 endpoint(s) beneath base path '/actuator'
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes/{format}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/filters],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:08:20 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 13:08:20 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 13:08:20 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 13:08:20 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 13:08:20 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 13:08:20 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 13:08:20 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=37fb0bed,type=ConfigurationPropertiesRebinder]
2018-07-04 13:08:20 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 13:08:20 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 13:08:20 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 13:08:20 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 13:08:20 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 13:08:20 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 13:08:20 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 13:08:21 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 13:08:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 13:08:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 13:08:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 13:08:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 13:08:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 13:08:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 13:08:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 13:08:22 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 13:08:22 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 13:08:22 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 13:08:22 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530680902176 with initial instances count: 1
2018-07-04 13:08:22 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 13:08:22 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530680902184, current=UP, previous=STARTING]
2018-07-04 13:08:22 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 13:08:22 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 13:08:22 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 13:08:22 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 23.152 seconds (JVM running for 28.973)
2018-07-04 13:08:22 [http-nio-8001-exec-9] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Registered instance SJTU_SE/localhost:SJTU_SE:9001 with status UP (replication=false)
2018-07-04 13:08:22 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 13:08:27 [RMI TCP Connection(4)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:08:27 [RMI TCP Connection(4)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 83 ms
2018-07-04 13:08:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:08:47 [http-nio-9001-exec-8] [INFO] [org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping] - Mapped URL path [/api-service/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-07-04 13:08:47 [http-nio-9001-exec-8] [INFO] [org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping] - Mapped URL path [/sjtu_se/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-07-04 13:08:47 [http-nio-9001-exec-8] [INFO] [java.lang.Class] - This is info message.
2018-07-04 13:08:47 [http-nio-9001-exec-8] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 13:08:52 [http-nio-9001-exec-1] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing SpringClientFactory-FindLadderService: startup date [Wed Jul 04 13:08:52 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37fb0bed
2018-07-04 13:08:52 [http-nio-9001-exec-1] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:08:52 [http-nio-9001-exec-1] [INFO] [com.netflix.config.ChainedDynamicProperty] - Flipping property: FindLadderService.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-07-04 13:08:52 [http-nio-9001-exec-1] [INFO] [com.netflix.util.concurrent.ShutdownEnabledTimer] - Shutdown hook installed for: NFLoadBalancer-PingTimer-FindLadderService
2018-07-04 13:08:52 [http-nio-9001-exec-1] [INFO] [com.netflix.loadbalancer.BaseLoadBalancer] - Client: FindLadderService instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=FindLadderService,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-07-04 13:08:52 [http-nio-9001-exec-1] [INFO] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] - Using serverListUpdater PollingServerListUpdater
2018-07-04 13:08:52 [http-nio-9001-exec-1] [INFO] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] - DynamicServerListLoadBalancer for client FindLadderService initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=FindLadderService,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6bd6d33
2018-07-04 13:08:53 [http-nio-9001-exec-1] [WARN] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: FindLadderService
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:159)
	... 105 more
2018-07-04 13:09:00 [http-nio-9001-exec-6] [WARN] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: FindLadderService
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:159)
	... 105 more
2018-07-04 13:09:34 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 13:09:36 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:09:36 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b1473ab: startup date [Wed Jul 04 13:09:36 CST 2018]; root of context hierarchy
2018-07-04 13:09:37 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:09:37 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ece9a33e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:09:38 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:09:38 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 13:09:38 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78a773fd: startup date [Wed Jul 04 13:09:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1b1473ab
2018-07-04 13:09:39 [main] [INFO] [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2018-07-04 13:09:39 [main] [INFO] [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2018-07-04 13:09:40 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=7e0f6a32-90a0-3956-9714-5506b06ee3a0
2018-07-04 13:09:40 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:09:40 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ece9a33e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:09:40 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 13:09:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:09:41 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2611 ms
2018-07-04 13:09:41 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:09:41 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:09:41 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@580e15c6
2018-07-04 13:09:43 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:09:44 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:09:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:09:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:09:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:09:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:09:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 13:09:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 13:09:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 13:09:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 13:09:45 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet zuulServlet mapped to [/zuul/*]
2018-07-04 13:09:45 [localhost-startStop-1] [INFO] [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar] - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2018-07-04 13:09:46 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@d109c4f, org.springframework.security.web.context.SecurityContextPersistenceFilter@38bb9d7a, org.springframework.security.web.header.HeaderWriterFilter@35d5ac51, org.springframework.security.web.csrf.CsrfFilter@582a764a, org.springframework.security.web.authentication.logout.LogoutFilter@277bf091, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@252dc8c4, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5633ed82, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6403e24c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@78d6447a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5b3a7ef5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3968bc60, org.springframework.security.web.session.SessionManagementFilter@2a3194c6, org.springframework.security.web.access.ExceptionTranslationFilter@546e61d5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@262816a8]
2018-07-04 13:09:46 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:09:46 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:09:46 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:09:46 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78a773fd: startup date [Wed Jul 04 13:09:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1b1473ab
2018-07-04 13:09:46 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 13:09:46 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 13:09:46 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:09:46 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:09:46 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:09:46 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:09:48 [main] [INFO] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] - Starting filter initializer
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 21 endpoint(s) beneath base path '/actuator'
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes/{format}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/filters],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:09:48 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 13:09:48 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 13:09:48 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 13:09:48 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 13:09:48 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 13:09:48 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 13:09:48 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=78a773fd,type=ConfigurationPropertiesRebinder]
2018-07-04 13:09:48 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 13:09:48 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 13:09:48 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 13:09:48 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 13:09:48 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 13:09:48 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 13:09:48 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 13:09:48 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 13:09:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 13:09:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 13:09:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 13:09:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 13:09:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 13:09:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 13:09:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 13:09:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 13:09:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 13:09:49 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 13:09:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530680989213 with initial instances count: 1
2018-07-04 13:09:49 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 13:09:49 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530680989220, current=UP, previous=STARTING]
2018-07-04 13:09:49 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 13:09:49 [http-nio-8001-exec-1] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Registered instance SJTU_SE/localhost:SJTU_SE:9001 with status UP (replication=false)
2018-07-04 13:09:49 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 13:09:49 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 13:09:49 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 13:09:49 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 15.651 seconds (JVM running for 17.649)
2018-07-04 13:09:50 [RMI TCP Connection(3)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:09:50 [RMI TCP Connection(3)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-04 13:10:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:11:35 [http-nio-9001-exec-7] [INFO] [org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping] - Mapped URL path [/zuul/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-07-04 13:11:35 [http-nio-9001-exec-7] [INFO] [org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping] - Mapped URL path [/sjtu_se/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-07-04 13:11:40 [http-nio-9001-exec-8] [WARN] [org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter] - No route found for uri: /zuul/info
2018-07-04 13:11:40 [http-nio-9001-exec-8] [INFO] [java.lang.Class] - This is info message.
2018-07-04 13:11:40 [http-nio-9001-exec-8] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 13:11:40 [Eureka-PeerNodesUpdater] [WARN] [com.netflix.eureka.cluster.PeerEurekaNodes] - The replica size seems to be empty. Check the route 53 DNS Registry
2018-07-04 13:11:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:12:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:13:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:14:26 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 13:14:28 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:14:28 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@bef2d72: startup date [Wed Jul 04 13:14:28 CST 2018]; root of context hierarchy
2018-07-04 13:14:29 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:14:29 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3569610b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:14:30 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:14:30 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 13:14:30 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1722011b: startup date [Wed Jul 04 13:14:30 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@bef2d72
2018-07-04 13:14:31 [main] [INFO] [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2018-07-04 13:14:32 [main] [INFO] [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2018-07-04 13:14:32 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=7e0f6a32-90a0-3956-9714-5506b06ee3a0
2018-07-04 13:14:32 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:14:32 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3569610b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:14:32 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 13:14:33 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2734 ms
2018-07-04 13:14:34 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:14:34 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:14:34 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3df36204
2018-07-04 13:14:35 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:14:37 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:14:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:14:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:14:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:14:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:14:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 13:14:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 13:14:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 13:14:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 13:14:38 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet zuulServlet mapped to [/zuul/*]
2018-07-04 13:14:38 [localhost-startStop-1] [INFO] [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar] - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2018-07-04 13:14:39 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7a0e7ecd, org.springframework.security.web.context.SecurityContextPersistenceFilter@5ef6fd7f, org.springframework.security.web.header.HeaderWriterFilter@1907874b, org.springframework.security.web.csrf.CsrfFilter@5bc7e78e, org.springframework.security.web.authentication.logout.LogoutFilter@146dcfe6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@26c47874, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@3374b5bc, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@60bbacfc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@767191b1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4beaf6bd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54e3658c, org.springframework.security.web.session.SessionManagementFilter@5b3a7ef5, org.springframework.security.web.access.ExceptionTranslationFilter@71904469, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2f236de0]
2018-07-04 13:14:39 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:14:39 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:14:39 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:14:39 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1722011b: startup date [Wed Jul 04 13:14:30 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@bef2d72
2018-07-04 13:14:39 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 13:14:39 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 13:14:39 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:14:39 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:14:39 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:14:39 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:14:41 [main] [INFO] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] - Starting filter initializer
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 21 endpoint(s) beneath base path '/actuator'
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes/{format}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/filters],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:14:41 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 13:14:41 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 13:14:41 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 13:14:41 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 13:14:41 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 13:14:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:14:41 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 13:14:41 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1722011b,type=ConfigurationPropertiesRebinder]
2018-07-04 13:14:41 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 13:14:41 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 13:14:41 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 13:14:41 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 13:14:41 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 13:14:41 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 13:14:41 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 13:14:41 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 13:14:42 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 13:14:42 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 13:14:42 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 13:14:42 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 13:14:42 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 13:14:42 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 13:14:42 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 13:14:42 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 13:14:42 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 13:14:42 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 13:14:42 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530681282377 with initial instances count: 1
2018-07-04 13:14:42 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 13:14:42 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530681282388, current=UP, previous=STARTING]
2018-07-04 13:14:42 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 13:14:42 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 13:14:42 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 13:14:42 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 16.976 seconds (JVM running for 19.219)
2018-07-04 13:14:42 [http-nio-8001-exec-9] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Registered instance SJTU_SE/localhost:SJTU_SE:9001 with status UP (replication=false)
2018-07-04 13:14:42 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 13:14:42 [RMI TCP Connection(6)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:14:43 [RMI TCP Connection(6)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2018-07-04 13:14:57 [http-nio-9001-exec-4] [INFO] [org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping] - Mapped URL path [/zuul/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-07-04 13:14:57 [http-nio-9001-exec-4] [INFO] [org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping] - Mapped URL path [/zuul1/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-07-04 13:14:57 [http-nio-9001-exec-4] [INFO] [org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping] - Mapped URL path [/sjtu_se/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-07-04 13:14:57 [http-nio-9001-exec-4] [WARN] [org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter] - No route found for uri: /zuul/info
2018-07-04 13:14:57 [http-nio-9001-exec-4] [INFO] [java.lang.Class] - This is info message.
2018-07-04 13:14:57 [http-nio-9001-exec-4] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 13:15:02 [http-nio-9001-exec-2] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing SpringClientFactory-zuul1: startup date [Wed Jul 04 13:15:02 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1722011b
2018-07-04 13:15:02 [http-nio-9001-exec-2] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:15:02 [http-nio-9001-exec-2] [INFO] [com.netflix.config.ChainedDynamicProperty] - Flipping property: zuul1.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-07-04 13:15:02 [http-nio-9001-exec-2] [INFO] [com.netflix.util.concurrent.ShutdownEnabledTimer] - Shutdown hook installed for: NFLoadBalancer-PingTimer-zuul1
2018-07-04 13:15:02 [http-nio-9001-exec-2] [INFO] [com.netflix.loadbalancer.BaseLoadBalancer] - Client: zuul1 instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=zuul1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-07-04 13:15:02 [http-nio-9001-exec-2] [INFO] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] - Using serverListUpdater PollingServerListUpdater
2018-07-04 13:15:02 [http-nio-9001-exec-2] [INFO] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] - DynamicServerListLoadBalancer for client zuul1 initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=zuul1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@139a9d27
2018-07-04 13:15:03 [http-nio-9001-exec-2] [WARN] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: zuul1
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:159)
	... 105 more
2018-07-04 13:15:07 [http-nio-9001-exec-10] [WARN] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: zuul1
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:159)
	... 105 more
2018-07-04 13:15:11 [http-nio-9001-exec-8] [WARN] [org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter] - No route found for uri: /zuul/info
2018-07-04 13:15:11 [http-nio-9001-exec-8] [INFO] [java.lang.Class] - This is info message.
2018-07-04 13:15:11 [http-nio-9001-exec-8] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 13:15:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:15:47 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 13:15:49 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:15:49 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c9d0b9d: startup date [Wed Jul 04 13:15:49 CST 2018]; root of context hierarchy
2018-07-04 13:15:50 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:15:50 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8a982ced] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:15:51 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:15:51 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 13:15:51 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5d43661b: startup date [Wed Jul 04 13:15:51 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c9d0b9d
2018-07-04 13:15:52 [main] [INFO] [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2018-07-04 13:15:52 [main] [INFO] [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2018-07-04 13:15:53 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=7e0f6a32-90a0-3956-9714-5506b06ee3a0
2018-07-04 13:15:53 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:15:53 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8a982ced] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:15:54 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 13:15:54 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2877 ms
2018-07-04 13:15:55 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:15:55 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:15:55 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@b37b936
2018-07-04 13:15:57 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:15:58 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:15:59 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:15:59 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:15:59 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:15:59 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:15:59 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 13:15:59 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 13:15:59 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 13:15:59 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 13:15:59 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet zuulServlet mapped to [/zuul/*]
2018-07-04 13:15:59 [localhost-startStop-1] [INFO] [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar] - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2018-07-04 13:15:59 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@277bf091, org.springframework.security.web.context.SecurityContextPersistenceFilter@fcc6023, org.springframework.security.web.header.HeaderWriterFilter@4068102e, org.springframework.security.web.csrf.CsrfFilter@4e08acf9, org.springframework.security.web.authentication.logout.LogoutFilter@5292ceca, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5633ed82, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@6726cc69, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5d21202d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@36417a54, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@14982a82, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@fab35b1, org.springframework.security.web.session.SessionManagementFilter@6c008c24, org.springframework.security.web.access.ExceptionTranslationFilter@312b34e3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@554f0dfb]
2018-07-04 13:15:59 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:15:59 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:15:59 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:16:00 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5d43661b: startup date [Wed Jul 04 13:15:51 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c9d0b9d
2018-07-04 13:16:00 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 13:16:00 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 13:16:00 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:16:00 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:16:00 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:16:00 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:16:01 [main] [INFO] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] - Starting filter initializer
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 21 endpoint(s) beneath base path '/actuator'
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes/{format}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/filters],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:16:01 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 13:16:01 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 13:16:01 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 13:16:01 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 13:16:01 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 13:16:01 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 13:16:01 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5d43661b,type=ConfigurationPropertiesRebinder]
2018-07-04 13:16:01 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 13:16:01 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 13:16:01 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 13:16:01 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 13:16:01 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 13:16:02 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 13:16:02 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 13:16:02 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 13:16:02 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 13:16:02 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 13:16:02 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 13:16:02 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 13:16:02 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 13:16:02 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 13:16:02 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 13:16:03 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 13:16:03 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 13:16:03 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 13:16:03 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530681363066 with initial instances count: 1
2018-07-04 13:16:03 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 13:16:03 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530681363073, current=UP, previous=STARTING]
2018-07-04 13:16:03 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 13:16:03 [http-nio-8001-exec-2] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Registered instance SJTU_SE/localhost:SJTU_SE:9001 with status UP (replication=false)
2018-07-04 13:16:03 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 13:16:03 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 13:16:03 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 13:16:03 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 16.052 seconds (JVM running for 18.292)
2018-07-04 13:16:03 [RMI TCP Connection(7)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:16:03 [RMI TCP Connection(7)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
2018-07-04 13:16:18 [http-nio-9001-exec-7] [INFO] [org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping] - Mapped URL path [/wl/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-07-04 13:16:18 [http-nio-9001-exec-7] [INFO] [org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping] - Mapped URL path [/zuul/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-07-04 13:16:18 [http-nio-9001-exec-7] [INFO] [org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping] - Mapped URL path [/sjtu_se/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-07-04 13:16:18 [http-nio-9001-exec-7] [WARN] [org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter] - No route found for uri: /zuul/info
2018-07-04 13:16:18 [http-nio-9001-exec-7] [INFO] [java.lang.Class] - This is info message.
2018-07-04 13:16:18 [http-nio-9001-exec-7] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 13:16:26 [http-nio-9001-exec-10] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing SpringClientFactory-wl: startup date [Wed Jul 04 13:16:26 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5d43661b
2018-07-04 13:16:26 [http-nio-9001-exec-10] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:16:26 [http-nio-9001-exec-10] [INFO] [com.netflix.config.ChainedDynamicProperty] - Flipping property: wl.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-07-04 13:16:26 [http-nio-9001-exec-10] [INFO] [com.netflix.util.concurrent.ShutdownEnabledTimer] - Shutdown hook installed for: NFLoadBalancer-PingTimer-wl
2018-07-04 13:16:26 [http-nio-9001-exec-10] [INFO] [com.netflix.loadbalancer.BaseLoadBalancer] - Client: wl instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=wl,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-07-04 13:16:26 [http-nio-9001-exec-10] [INFO] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] - Using serverListUpdater PollingServerListUpdater
2018-07-04 13:16:26 [http-nio-9001-exec-10] [INFO] [com.netflix.loadbalancer.DynamicServerListLoadBalancer] - DynamicServerListLoadBalancer for client wl initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=wl,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@596df1ce
2018-07-04 13:16:27 [http-nio-9001-exec-10] [WARN] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: wl
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:159)
	... 105 more
2018-07-04 13:16:35 [http-nio-9001-exec-4] [WARN] [org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter] - No route found for uri: /zuul/info
2018-07-04 13:16:35 [http-nio-9001-exec-4] [INFO] [java.lang.Class] - This is info message.
2018-07-04 13:16:35 [http-nio-9001-exec-4] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 13:16:40 [http-nio-9001-exec-6] [WARN] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: wl
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:159)
	... 105 more
2018-07-04 13:16:40 [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater] [INFO] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Current renewal threshold is : 3
2018-07-04 13:16:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 2ms
2018-07-04 13:16:42 [http-nio-9001-exec-7] [WARN] [org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: wl
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:159)
	... 105 more
2018-07-04 13:16:49 [http-nio-9001-exec-8] [WARN] [org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter] - No route found for uri: /zuul/info
2018-07-04 13:16:49 [http-nio-9001-exec-8] [INFO] [java.lang.Class] - This is info message.
2018-07-04 13:16:49 [http-nio-9001-exec-8] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 13:16:49 [http-nio-9001-exec-9] [WARN] [org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter] - No route found for uri: /zuul/info
2018-07-04 13:16:49 [http-nio-9001-exec-9] [INFO] [java.lang.Class] - This is info message.
2018-07-04 13:16:49 [http-nio-9001-exec-9] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 13:17:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:17:58 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 13:18:01 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:18:01 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1f0f1111: startup date [Wed Jul 04 13:18:01 CST 2018]; root of context hierarchy
2018-07-04 13:18:01 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:18:01 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$49b72546] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:18:03 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:18:03 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 13:18:03 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@797b0699: startup date [Wed Jul 04 13:18:03 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1f0f1111
2018-07-04 13:18:04 [main] [INFO] [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2018-07-04 13:18:04 [main] [INFO] [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2018-07-04 13:18:05 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=7e0f6a32-90a0-3956-9714-5506b06ee3a0
2018-07-04 13:18:05 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:18:05 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$49b72546] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:18:05 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 13:18:06 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2934 ms
2018-07-04 13:18:06 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:18:06 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:18:06 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@40e89a66
2018-07-04 13:18:08 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:18:09 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:18:10 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:18:10 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:18:10 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:18:10 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:18:10 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 13:18:10 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 13:18:10 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 13:18:10 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 13:18:10 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet zuulServlet mapped to [/zuul/*]
2018-07-04 13:18:10 [localhost-startStop-1] [INFO] [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar] - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2018-07-04 13:18:11 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@508a65bf, org.springframework.security.web.context.SecurityContextPersistenceFilter@25d93198, org.springframework.security.web.header.HeaderWriterFilter@5300cac, org.springframework.security.web.csrf.CsrfFilter@dc79225, org.springframework.security.web.authentication.logout.LogoutFilter@62db3891, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@261ea657, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@58ff8d79, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@25290bca, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@f951a7f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@582a764a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@17f2dd85, org.springframework.security.web.session.SessionManagementFilter@1ba359bd, org.springframework.security.web.access.ExceptionTranslationFilter@644ded04, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5e1d03d7]
2018-07-04 13:18:11 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:18:11 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:18:11 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:18:11 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@797b0699: startup date [Wed Jul 04 13:18:03 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1f0f1111
2018-07-04 13:18:11 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 13:18:11 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 13:18:11 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:18:11 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:18:11 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:18:11 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:18:12 [main] [INFO] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] - Starting filter initializer
2018-07-04 13:18:12 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 21 endpoint(s) beneath base path '/actuator'
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes/{format}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/filters],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:18:13 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 13:18:13 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 13:18:13 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 13:18:13 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 13:18:13 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 13:18:13 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 13:18:13 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=797b0699,type=ConfigurationPropertiesRebinder]
2018-07-04 13:18:13 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 13:18:13 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 13:18:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 13:18:13 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 13:18:13 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 13:18:13 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 13:18:13 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 13:18:13 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 13:18:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 13:18:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 13:18:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 13:18:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 13:18:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 13:18:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 13:18:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 13:18:14 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 13:18:14 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 13:18:14 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 13:18:14 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530681494090 with initial instances count: 1
2018-07-04 13:18:14 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 13:18:14 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530681494098, current=UP, previous=STARTING]
2018-07-04 13:18:14 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 13:18:14 [http-nio-8001-exec-6] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Registered instance SJTU_SE/localhost:SJTU_SE:9001 with status UP (replication=false)
2018-07-04 13:18:14 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 13:18:14 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 13:18:14 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 13:18:14 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 16.502 seconds (JVM running for 18.318)
2018-07-04 13:18:14 [RMI TCP Connection(7)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:18:14 [RMI TCP Connection(7)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2018-07-04 13:18:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 2ms
2018-07-04 13:19:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:19:42 [http-nio-9001-exec-5] [INFO] [org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping] - Mapped URL path [/zuul/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-07-04 13:19:42 [http-nio-9001-exec-5] [INFO] [org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping] - Mapped URL path [/sjtu_se/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-07-04 13:20:01 [http-nio-9001-exec-3] [WARN] [org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter] - No route found for uri: /zuul/info
2018-07-04 13:20:01 [http-nio-9001-exec-3] [INFO] [java.lang.Class] - This is info message.
2018-07-04 13:20:01 [http-nio-9001-exec-3] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 13:20:02 [http-nio-9001-exec-4] [WARN] [org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter] - No route found for uri: /zuul/info
2018-07-04 13:20:02 [http-nio-9001-exec-4] [INFO] [java.lang.Class] - This is info message.
2018-07-04 13:20:02 [http-nio-9001-exec-4] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 13:20:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:21:40 [Eureka-PeerNodesUpdater] [WARN] [com.netflix.eureka.cluster.PeerEurekaNodes] - The replica size seems to be empty. Check the route 53 DNS Registry
2018-07-04 13:21:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:22:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 1ms
2018-07-04 13:23:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:24:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:25:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:26:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:27:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:28:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:29:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 1ms
2018-07-04 13:30:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 1ms
2018-07-04 13:31:40 [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater] [INFO] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Current renewal threshold is : 3
2018-07-04 13:31:40 [Eureka-PeerNodesUpdater] [WARN] [com.netflix.eureka.cluster.PeerEurekaNodes] - The replica size seems to be empty. Check the route 53 DNS Registry
2018-07-04 13:31:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:32:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 1ms
2018-07-04 13:33:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 26ms
2018-07-04 13:33:42 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 13:33:45 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:33:46 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6d2a209c: startup date [Wed Jul 04 13:33:46 CST 2018]; root of context hierarchy
2018-07-04 13:33:49 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:33:49 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2a5dbc7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:33:51 [main] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:33:51 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 13:33:51 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@48c76607: startup date [Wed Jul 04 13:33:51 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6d2a209c
2018-07-04 13:33:54 [main] [INFO] [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2018-07-04 13:33:54 [main] [INFO] [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2018-07-04 13:33:55 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=7e0f6a32-90a0-3956-9714-5506b06ee3a0
2018-07-04 13:33:55 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:33:56 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2a5dbc7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:33:57 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 13:33:59 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 8010 ms
2018-07-04 13:34:00 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:34:00 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:34:00 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6df06e7b
2018-07-04 13:34:02 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:34:04 [localhost-startStop-1] [INFO] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
2018-07-04 13:34:06 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:34:06 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:34:06 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:34:06 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:34:06 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 13:34:06 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 13:34:06 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 13:34:06 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 13:34:06 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet zuulServlet mapped to [/zuul/*]
2018-07-04 13:34:06 [localhost-startStop-1] [INFO] [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar] - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2018-07-04 13:34:07 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a734c04, org.springframework.security.web.context.SecurityContextPersistenceFilter@644ded04, org.springframework.security.web.header.HeaderWriterFilter@4b6d92e, org.springframework.security.web.csrf.CsrfFilter@44bd4b0a, org.springframework.security.web.authentication.logout.LogoutFilter@292158f8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@146dcfe6, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@59f93db8, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@660f0c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@13d9261f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c777e7b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4760f169, org.springframework.security.web.session.SessionManagementFilter@7899de11, org.springframework.security.web.access.ExceptionTranslationFilter@4ee5b2d9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1dba4e06]
2018-07-04 13:34:07 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:34:07 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:34:08 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:34:08 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@48c76607: startup date [Wed Jul 04 13:33:51 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6d2a209c
2018-07-04 13:34:08 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 13:34:08 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 13:34:09 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:34:09 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:34:09 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:34:09 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:34:11 [main] [INFO] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] - Starting filter initializer
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 21 endpoint(s) beneath base path '/actuator'
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes/{format}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/filters],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:34:11 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 13:34:11 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 13:34:11 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 13:34:11 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 13:34:11 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 13:34:11 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 13:34:11 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=48c76607,type=ConfigurationPropertiesRebinder]
2018-07-04 13:34:11 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 13:34:11 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 13:34:11 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 13:34:11 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 13:34:11 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 13:34:12 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 13:34:12 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 13:34:12 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 13:34:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 13:34:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 13:34:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 13:34:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 13:34:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 13:34:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 13:34:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 13:34:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 13:34:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 13:34:13 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 13:34:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530682453431 with initial instances count: 1
2018-07-04 13:34:13 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 13:34:13 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530682453441, current=UP, previous=STARTING]
2018-07-04 13:34:13 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001: registering service...
2018-07-04 13:34:13 [http-nio-8001-exec-8] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Registered instance SJTU_SE/localhost:SJTU_SE:9001 with status UP (replication=false)
2018-07-04 13:34:13 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/localhost:SJTU_SE:9001 - registration status: 204
2018-07-04 13:34:13 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 13:34:13 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 13:34:13 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 31.915 seconds (JVM running for 36.859)
2018-07-04 13:34:14 [RMI TCP Connection(6)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:34:14 [RMI TCP Connection(6)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-07-04 13:34:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:35:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:36:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:37:41 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:44:01 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 13:44:04 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@d4342c2: startup date [Wed Jul 04 13:44:04 CST 2018]; root of context hierarchy
2018-07-04 13:44:04 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:44:04 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:44:06 [main] [INFO] [com.eureka.server.ServerApplication] - No active profile set, falling back to default profiles: default
2018-07-04 13:44:06 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5456afaa: startup date [Wed Jul 04 13:44:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@d4342c2
2018-07-04 13:44:08 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=d5f464e5-7267-3981-8b30-e4e5fa33af5d
2018-07-04 13:44:08 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:44:08 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:44:09 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8001 (http)
2018-07-04 13:44:10 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 4320 ms
2018-07-04 13:44:11 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:44:11 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:44:11 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1d4d036a
2018-07-04 13:44:16 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:44:16 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:44:16 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:44:16 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:44:16 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 13:44:16 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 13:44:16 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'servletContainer' to urls: [/eureka/*]
2018-07-04 13:44:16 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 13:44:16 [localhost-startStop-1] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 13:44:16 [localhost-startStop-1] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 13:44:16 [localhost-startStop-1] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 13:44:16 [localhost-startStop-1] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 13:44:17 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:44:17 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:44:17 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:44:18 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5456afaa: startup date [Wed Jul 04 13:44:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@d4342c2
2018-07-04 13:44:18 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:44:18 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:44:18 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 13:44:18 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 13:44:18 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:44:18 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:44:19 [main] [INFO] [org.springframework.ui.freemarker.SpringTemplateLoader] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5456afaa: startup date [Wed Jul 04 13:44:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@d4342c2] and template loader path [classpath:/templates/]
2018-07-04 13:44:19 [main] [INFO] [org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-04 13:44:19 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 13:44:20 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 13:44:20 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Client configured to neither register nor query for data.
2018-07-04 13:44:20 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530683060021 with initial instances count: 0
2018-07-04 13:44:20 [main] [INFO] [com.netflix.eureka.DefaultEurekaServerContext] - Initializing ...
2018-07-04 13:44:20 [main] [WARN] [com.netflix.eureka.cluster.PeerEurekaNodes] - The replica size seems to be empty. Check the route 53 DNS Registry
2018-07-04 13:44:20 [main] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Finished initializing remote region registries. All known remote regions: []
2018-07-04 13:44:20 [main] [INFO] [com.netflix.eureka.DefaultEurekaServerContext] - Initialized
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 18 endpoint(s) beneath base path '/actuator'
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:44:20 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 13:44:20 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 13:44:20 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 13:44:20 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 13:44:20 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 13:44:20 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 13:44:20 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5456afaa,type=ConfigurationPropertiesRebinder]
2018-07-04 13:44:20 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 13:44:20 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SE_groupServer with eureka with status UP
2018-07-04 13:44:20 [Thread-51] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Setting the eureka configuration..
2018-07-04 13:44:20 [Thread-51] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Eureka data center value eureka.datacenter is not set, defaulting to default
2018-07-04 13:44:20 [Thread-51] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Eureka environment value eureka.environment is not set, defaulting to test
2018-07-04 13:44:20 [Thread-51] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - isAws returned false
2018-07-04 13:44:20 [Thread-51] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Initialized server context
2018-07-04 13:44:20 [Thread-51] [INFO] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Got 1 instances from neighboring DS node
2018-07-04 13:44:20 [Thread-51] [INFO] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Renew threshold is: 1
2018-07-04 13:44:20 [Thread-51] [INFO] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Changing status to UP
2018-07-04 13:44:20 [Thread-51] [INFO] [org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration] - Started Eureka Server
2018-07-04 13:44:20 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8001 (http) with context path ''
2018-07-04 13:44:20 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 8001
2018-07-04 13:44:20 [main] [INFO] [com.eureka.server.ServerApplication] - Started ServerApplication in 20.05 seconds (JVM running for 40.17)
2018-07-04 13:44:22 [RMI TCP Connection(5)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:44:22 [RMI TCP Connection(5)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-04 13:44:51 [background-preinit] [INFO] [org.hibernate.validator.internal.util.Version] - HV000001: Hibernate Validator 6.0.10.Final
2018-07-04 13:44:56 [main] [INFO] [org.springframework.context.annotation.AnnotationConfigApplicationContext] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c9d0b9d: startup date [Wed Jul 04 13:44:56 CST 2018]; root of context hierarchy
2018-07-04 13:44:57 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:44:57 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8a982ced] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:44:59 [main] [INFO] [com.eureka.client.ClientApplication] - No active profile set, falling back to default profiles: default
2018-07-04 13:44:59 [main] [INFO] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@479cbee5: startup date [Wed Jul 04 13:44:59 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c9d0b9d
2018-07-04 13:45:02 [main] [INFO] [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2018-07-04 13:45:02 [main] [INFO] [org.springframework.beans.factory.support.DefaultListableBeanFactory] - Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2018-07-04 13:45:02 [main] [INFO] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=7e0f6a32-90a0-3956-9714-5506b06ee3a0
2018-07-04 13:45:03 [main] [INFO] [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-04 13:45:03 [main] [INFO] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8a982ced] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-04 13:45:04 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 9001 (http)
2018-07-04 13:45:05 [localhost-startStop-1] [INFO] [org.springframework.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 6270 ms
2018-07-04 13:45:06 [localhost-startStop-1] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:45:06 [localhost-startStop-1] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:45:06 [localhost-startStop-1] [INFO] [com.netflix.config.DynamicPropertyFactory] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@70afda40
2018-07-04 13:45:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:45:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:45:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:45:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:45:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean] - Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-07-04 13:45:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'httpTraceFilter' to: [/*]
2018-07-04 13:45:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.FilterRegistrationBean] - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-07-04 13:45:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet dispatcherServlet mapped to [/]
2018-07-04 13:45:14 [localhost-startStop-1] [INFO] [org.springframework.boot.web.servlet.ServletRegistrationBean] - Servlet zuulServlet mapped to [/zuul/*]
2018-07-04 13:45:14 [localhost-startStop-1] [INFO] [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar] - Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2018-07-04 13:45:15 [main] [INFO] [org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d21202d, org.springframework.security.web.context.SecurityContextPersistenceFilter@44bd4b0a, org.springframework.security.web.header.HeaderWriterFilter@312b34e3, org.springframework.security.web.csrf.CsrfFilter@7661b5a, org.springframework.security.web.authentication.logout.LogoutFilter@7899de11, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5b3a7ef5, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@14982a82, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5ef6fd7f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@216e0771, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@60cf62ad, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@14b789f6, org.springframework.security.web.session.SessionManagementFilter@1a865273, org.springframework.security.web.access.ExceptionTranslationFilter@302edb74, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1e8ab90f]
2018-07-04 13:45:15 [main] [WARN] [com.netflix.config.sources.URLConfigurationSource] - No URLs will be polled as dynamic configuration sources.
2018-07-04 13:45:15 [main] [INFO] [com.netflix.config.sources.URLConfigurationSource] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-04 13:45:15 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:45:16 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@479cbee5: startup date [Wed Jul 04 13:44:59 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c9d0b9d
2018-07-04 13:45:16 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/info]}" onto public java.lang.String com.eureka.client.controller.HelloController.Hello()
2018-07-04 13:45:16 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/]}" onto public java.lang.String com.eureka.client.controller.IndexController.home(java.lang.String,java.lang.String,java.lang.String)
2018-07-04 13:45:16 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:45:16 [main] [INFO] [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:45:16 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:45:16 [main] [INFO] [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:45:18 [main] [INFO] [org.springframework.cloud.netflix.zuul.ZuulFilterInitializer] - Starting filter initializer
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 21 endpoint(s) beneath base path '/actuator'
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/routes/{format}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator/filters],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-04 13:45:18 [main] [INFO] [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:45:19 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Registering beans for JMX exposure on startup
2018-07-04 13:45:19 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-04 13:45:19 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-04 13:45:19 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-04 13:45:19 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-04 13:45:19 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-04 13:45:19 [main] [INFO] [org.springframework.jmx.export.annotation.AnnotationMBeanExporter] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=479cbee5,type=ConfigurationPropertiesRebinder]
2018-07-04 13:45:19 [main] [INFO] [org.springframework.context.support.DefaultLifecycleProcessor] - Starting beans in phase 0
2018-07-04 13:45:19 [main] [INFO] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
2018-07-04 13:45:19 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
2018-07-04 13:45:19 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
2018-07-04 13:45:19 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
2018-07-04 13:45:20 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
2018-07-04 13:45:20 [main] [INFO] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
2018-07-04 13:45:20 [main] [INFO] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] - Resolving eureka endpoints via configuration
2018-07-04 13:45:20 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 13:45:20 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 13:45:20 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 13:45:20 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 13:45:20 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 13:45:20 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: true
2018-07-04 13:45:20 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 13:45:20 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:45:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 13:45:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Starting heartbeat executor: renew interval is: 30
2018-07-04 13:45:21 [main] [INFO] [com.netflix.discovery.InstanceInfoReplicator] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-04 13:45:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1530683121227 with initial instances count: 0
2018-07-04 13:45:21 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application SJTU_SE with eureka with status UP
2018-07-04 13:45:21 [main] [INFO] [com.netflix.discovery.DiscoveryClient] - Saw local status change event StatusChangeEvent [timestamp=1530683121252, current=UP, previous=STARTING]
2018-07-04 13:45:21 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/DESKTOP-62OKGLL:SJTU_SE:9001: registering service...
2018-07-04 13:45:21 [main] [INFO] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 9001 (http) with context path ''
2018-07-04 13:45:21 [main] [INFO] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 9001
2018-07-04 13:45:21 [main] [INFO] [com.eureka.client.ClientApplication] - Started ClientApplication in 30.11 seconds (JVM running for 36.038)
2018-07-04 13:45:22 [http-nio-8001-exec-3] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Registered instance SJTU_SE/DESKTOP-62OKGLL:SJTU_SE:9001 with status UP (replication=false)
2018-07-04 13:45:22 [DiscoveryClient-InstanceInfoReplicator-0] [INFO] [com.netflix.discovery.DiscoveryClient] - DiscoveryClient_SJTU_SE/DESKTOP-62OKGLL:SJTU_SE:9001 - registration status: 204
2018-07-04 13:45:22 [RMI TCP Connection(2)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:45:22 [RMI TCP Connection(2)-127.0.0.1] [INFO] [org.springframework.web.servlet.DispatcherServlet] - FrameworkServlet 'dispatcherServlet': initialization completed in 67 ms
2018-07-04 13:45:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Disable delta property : false
2018-07-04 13:45:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Single vip registry refresh property : null
2018-07-04 13:45:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Force full registry fetch : false
2018-07-04 13:45:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application is null : false
2018-07-04 13:45:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Registered Applications size is zero : true
2018-07-04 13:45:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Application version is -1: false
2018-07-04 13:45:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - Getting all instance registry info from the eureka server
2018-07-04 13:45:51 [DiscoveryClient-CacheRefreshExecutor-0] [INFO] [com.netflix.discovery.DiscoveryClient] - The response status is 200
2018-07-04 13:45:51 [http-nio-9001-exec-10] [INFO] [org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping] - Mapped URL path [/zuul/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-07-04 13:45:51 [http-nio-9001-exec-10] [INFO] [org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping] - Mapped URL path [/sjtu_se/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-07-04 13:46:20 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
2018-07-04 13:46:39 [http-nio-9001-exec-8] [WARN] [org.springframework.cloud.netflix.zuul.filters.pre.PreDecorationFilter] - No route found for uri: /zuul/info
2018-07-04 13:46:39 [http-nio-9001-exec-8] [INFO] [java.lang.Class] - This is info message.
2018-07-04 13:46:39 [http-nio-9001-exec-8] [ERROR] [java.lang.Class] - This is error message.
2018-07-04 13:47:20 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 44ms
2018-07-04 13:48:20 [Eureka-EvictionTimer] [INFO] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
